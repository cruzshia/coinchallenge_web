{"version":3,"sources":["images/logo.png","container/Home/Home.tsx","contants/common.ts","contants/themeColor.ts","epics/commonEpic/commonEpic.ts","components/Landing/index.tsx","images/loading.gif","contants/errorCode.ts","components/Header/Header.tsx","components/Header/index.tsx","utils/contractUtils.ts","epics/challengeGroupEpic/action.ts","components/Transaction/Transaction.tsx","utils/index.ts","container/CreateChallengeGroup/CreateChallengeGroup.tsx","container/Challenge/components/ChallengeCard.tsx","container/Challenge/components/ChallengeInfo.tsx","container/Challenge/components/SponsorButton.tsx","container/Challenge/components/Sponsers.tsx","contracts/contractService.ts","container/Challenge/components/HistoryTimeline.tsx","container/Challenge/components/Notifier.tsx","epics/challengeEpic/action.ts","translation/index.tsx","container/Challenge/Challenge.tsx","components/App/App.tsx","serviceWorker.ts","reducer/challengeReducer.ts","reducer/commonReducer.ts","reducer/challengeGroupReducer.ts","reducer/rootReducer.ts","epics/challengeGroupEpic/challengeGroupEpic.ts","epics/challengeEpic/challengeEpic.ts","epics/index.tsx","store/configureStore.tsx","index.tsx","epics/commonEpic/action.ts"],"names":["module","exports","__webpack_require__","p","StyledParticle","styled","position","top","left","width","height","Home","process","browser","require","window","particlesJS","load","_this$props","this","props","data","intl","closePopup","_ref","get","popMessage","messageKey","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","id","_Components_Header__WEBPACK_IMPORTED_MODULE_10__","title","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_12___default","open","keepMounted","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_14___default","style","wordBreak","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_15___default","formatMessage","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default","onClick","color","React","Component","connect","state","dispath","initContract","setPopup","showPop","injectIntl","d","__webpack_exports__","breakPoint","supportLang","hostUrl","REACT_APP_THEME","REACT_APP_SUB_THEME","REACT_APP_FONT_COLOR","REACT_APP_THEME_BACKGROUND","APP_THEME","APP_SUB_THEME","APP_FONT_COLOR","APP_FONT_COLOR_DARK","APP_LIGHT_BG","concat","checkContract","state$","commonReducer","value","length","action$","pipe","ofType","INIT_CONTRACT","filter","switchMap","Object","_Users_shiacruz_Desktop_projects_dapp_CoinChallengeWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_shiacruz_Desktop_projects_dapp_CoinChallengeWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","accounts","txWeb3","injectProvider","txContract","network","providers","contract","accountBalance","wrap","_context","prev","next","detectNetwork","sent","web3","Web3","ethereum","currentProvider","newContract","enable","WebsocketProvider","eth","getAccounts","t0","methods","userBalances","call","abrupt","setContract","userAddress","error","t1","NO_PROVIDER","key","stop","GET_BALANCE","_callee2","_ref4","_context2","setBalance","WITHDRAW_BALANCE","_ref5","from","userWithdraw","send","mergeMap","response","of","getBalance","catchError","err","imageDir","LandingCtr","withConfig","displayName","componentId","show","StyledUl","right","transform","Landing","ref","headerRef","scriptRef","createRef","scriptRef2","_this2","document","getElementById","visibility","head","getElementsByTagName","link","type","rel","href","onload","setState","appendChild","LinkDom","remove","current","react__WEBPACK_IMPORTED_MODULE_5___default","className","backgroundImage","_material_ui_icons_Language__WEBPACK_IMPORTED_MODULE_9___default","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","dangerouslySetInnerHTML","__html","src","alt","dateTime","target","react_helmet__WEBPACK_IMPORTED_MODULE_10__","defer","PureComponent","StyledAppBar","AppBar","background","textAlign","lineHeight","textDecoration","LangIcon","Language","MonetizationOnIcon","MonetizationOn","cursor","Balance","defineProperty","fontSize","display","LangMenu","ButtonAppBar","anchorEl","openWithdraw","isWithrawing","onOpenWithdraw","_this","onCloseWithraw","onWithdraw","withdrawBalance","handeClick","e","currentTarget","handleClose","onSelectLang","lang","history","replace","location","pathname","_this$state","balance","formatBalance","Number","utils","fromWei","toFixed","Boolean","react_default","Link","Menu_default","TransitionComponent","Fade","map","item","MenuItem_default","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","autoFocus","dispatch","withRouter","Header","networkAddress","contractAddress","web3Interface","address","Contract","CoinChallengs","abi","gas","console","log","parseChallenge","round","_currentRound","targetDays","_targetDays","totalDays","_totalDays","completeDays","_completeDays","startTimestamp","_startTimestamp","sponserSize","_sponsorSize","amount","_amount","totalSponsorAmount","_totalSponsorAmount","goal","_goal","netId","undefined","host","indexOf","net","getId","_x","apply","arguments","setCreateResult","payload","Div","Img","margin","Href","bottom","txHash","classNames","Loading","detect","formatPercent","b","Decimal","toString","isUrlValid","url","match","parseLangParams","search","URLSearchParams","parseLangPath","lng","Cookies","splitLng","split","toUpperCase","set","changeRoute","Form","flexWrap","flexDirection","alignItems",".textField","zIndex","&:focus label",".button","backgroundColor","padding","marginTop","&:hover","opacity","Styles","maxWidth","Icon","LabelTxt","WaitingBlk","marginBottom","ErrorTxt","paddingLeft","FormStyle","MenuStyle","maxHeight","SelectStyle","Label","text","defaultGroupState","name","minDays","maxDays","maxDelayDays","minAmount","hasError","val","CreateChallengeGroup","challengeGroup","objectSpread","agent","canSend","onTextChange","checkForm","onDayChange","_this$state2","onDelayDayChange","_this$state3","onAmountChange","field","_this$state4","onUrlChange","_this$state5","onAgentChange","isEmpty","isAddress","onSubmit","checkWallet","newChallengeGroup","errorTxt","createResult","status","_this$state6","_this$props2","isConfirming","noValidate","autoComplete","Logo","TextField_default","label","variant","placeholder","onChange","InputLabelProps","LabelProp","required","FormControl_default","fullWidth","InputLabel_default","htmlFor","Select_default","MenuProps","input","OutlinedInput_default","labelWidth","Array","fill","_data","index","coin","Transaction_Transaction","disabled","shrink","StyledTtitleCtr","minHeight","StyledTitle",".goal","ChallengeCard","memo","invalidAddress","LogoImg","StyledFont","fontWeight","StyledUnitFont","StyledContent","CrowdCtr","justifyContent","InfoBlk","Grid","Address","Amount","StyledInfoCtr","bgcolor","REACT_APP_COIN","withStyles","_theme","lightTooltip","FabCtr",".sponsor-btn","minWidth","SponsorButton","amountRef","commentRef","amountError","commentError","onConfirm","comment","trim","onSponsor","handleOpen","textTransform","inputRef","SponserCtr","BarCtr","paddingRight","CoinTxt","Comment","SponsorTitle","_mediaMaxWidth$","flex","Sponsers","sponsors","sponsor","idx","Sponsers_Address","who","newChallengesEvents","_ref3","asyncToGenerator","regenerator_default","_ref2","callback","events","NewChallenge","fromBlock","_error","event","_event$returnValues","returnValues","challenger","groupId","proposer","_x2","getPastChallenges","_callee3","finishChallenges","i","_context3","getAllPastEvents","push","_x3","_ref7","_callee5","options","_args5","_context5","getPastEvents","_x5","getPastSponsor","_ref8","_callee6","sponsers","_args6","_context6","_who","getSponsor","_comment","_x6","_x7","_x8","_x9","sponsorEvents","_ref10","_callee7","_ref9","_context7","SponsorChallenge","on","_event$returnValues2","_x10","STATUS","STATUS_COLOR","Title","paddingBottom","borderBottom","TimelineCtr","HistoryCtr","ResultText","HistoryTimeline","fetched","challenges","pastChallengs","challenge","moment","format","HistoryTimeline_Amount","toPrecision","StyledTxt","Notifier","queue","registered","messageInfo","Math","random","message","processQueue","shift","handleExited","insertEvent","classes","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ContentProps","action","IconButton_default","aria-label","Close_default","GET_CAHLLENGE","setConfirmSponsor","addLocaleData","toConsumableArray","localeEn","localeZh","WrappedComponent","messgaes","en","messageEN_US","zh-TW","messageZH_TW","zh-CN","messageZH_CN","currentLang","ChallengeContainer","overflow","StyledGridList","LoadingBlk","Challenge","classCallCheck","possibleConstructorReturn","getPrototypeOf","sponsorFetched","onNewSponsor","sponsorAmount","_txContract","_account","sponserChallenge","account","canSponsor","_this$props3","diff","params","fetchChallenge","isValid","branch","deepview","channel","feature","$uri_redirect_mode","$deeplink_path","user_cookie_id","open_app","sponsorData","reduce","accumulator","checkAndFetch","_this$props5","_this$props6","isCofirmingSponsor","txhash","groupName","groupImage","locale","goalText","defaultMessage","shareDesc","Helmet","property","content","components_ChallengeCard","components_ChallengeInfo","components_SponsorButton","components_Sponsers","components_HistoryTimeline","components_Notifier","challengeState","commonState","toJS","theme","createMuiTheme","palette","primary","main","light","dark","typography","useNextVariants","Body","fontFamily","MainContainer","paddingTop","App","jssStyles","styles","Switch","Route","path","exact","component","Redirect","withTheme","_React$Component","MutilLang","inherits","createClass","listen","nextLang","index_es","messages","hostname","initState","initialState","Record","loading","stateMaker","SET_CONTRACT","_ref$accounts","merge","SET_POPUP","CHECK_WALLET","getMetmaskUrl","SET_CONFIRM","challengeGroupReducer","__PRELOADED_STATE__","challengeReducer","rootReducer","combineReducers","common","challengeGroupEpic","take","_contract$methods","toWei","createChallengeGroup","values","_err","hash","setConfirm","gasUsed","parseErrorMsg","repeat","challengeEpic","getChallengeGroup","_name","_url","_minAmount","method","isNaN","sponsorChallenge","String","combineEpics","commonEpics","challengeGroupEpics","challengeEpics","epicMiddleware","createEpicMiddleware","middlewares","store","createStore","applyMiddleware","run","rootEpic","ReactDOM","hydrate","es","BrowserRouter","components_App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.665da731.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5a6da61.png\";","import React from 'react'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport { Map } from 'immutable'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { initContract, setPopup } from '@Epics/commonEpic/action'\nimport Header from '@Components/Header'\nimport styled from 'styled-components'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Button from '@material-ui/core/Button'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\n\nconst StyledParticle = styled('div')<{ [key: string]: any }>({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n})\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  return {\n    data: state.get('common') as CommonStateType\n  }\n}\n\nconst mapDispatchToProps = (dispath: Dispatch) => ({\n  initContract: () => dispath(initContract()),\n  closePopup: () => dispath(setPopup({ showPop: false }))\n})\n\ninterface Props {\n  data: CommonStateType\n  initContract: () => void\n  closePopup: () => void\n}\n\nclass Home extends React.Component<Props & InjectedIntlProps> {\n  public async componentDidMount() {\n    if (process.browser) {\n      require('particles.js')\n      window.particlesJS.load('particle-body', '/particlesjs-config.json')\n    }\n  }\n\n  render() {\n    const { data, intl, closePopup } = this.props\n    const [popMessage, messageKey] = [\n      data.get('popMessage'),\n      data.get('messageKey')\n    ]\n\n    return (\n      <React.Fragment>\n        <StyledParticle id='particle-body' />\n        <Header title='CoinChallenges' />\n        <Dialog\n          open={data.get('showPop')}\n          keepMounted\n          onClose={closePopup}\n          aria-labelledby='alert-dialog-slide-title'\n          aria-describedby='alert-dialog-slide-description'\n        >\n          <DialogContent style={{ wordBreak: 'break-all' }}>\n            <DialogContentText id='alert-dialog-slide-description'>\n              {messageKey ? intl.formatMessage({ id: messageKey }) : popMessage}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closePopup} color='primary'>\n              {intl.formatMessage({ id: 'ok' })}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(Home))\n","export const breakPoint = '800px'\nexport const supportLang = ['en', 'zh-TW', 'zh-CN']\nexport const hostUrl = () => {\n  if (process.env.NODE_ENV === 'production') {\n    return 'https://coinchallenges.app/'\n  }\n  return 'https://coin-challenges.herokuapp.com/'\n}\n","const {\n  REACT_APP_THEME,\n  REACT_APP_SUB_THEME,\n  REACT_APP_FONT_COLOR,\n  REACT_APP_THEME_BACKGROUND\n} = process.env\nexport const APP_THEME = REACT_APP_THEME || '#ff5864'\nexport const APP_SUB_THEME = REACT_APP_SUB_THEME || '#ff99a0'\nexport const APP_FONT_COLOR = REACT_APP_FONT_COLOR || '#fffafa'\nexport const APP_FONT_COLOR_DARK = '#101010'\nexport const APP_LIGHT_BG = 'rgb(255,250,250)' //'#fffafa'\nexport const APP_THEME_BACKGROUND =\n  REACT_APP_THEME_BACKGROUND ||\n  `linear-gradient(45deg, ${APP_THEME} 30%, ${APP_SUB_THEME} 90%)`\n\nexport const COLOR_BAR = [\n  '#ff6776',\n  'rgba(0, 118, 216, 0.6)',\n  'rgba(0, 163, 56, 0.6)'\n]\n","import { Action } from '@Src/typing/globalTypes'\nimport {\n  INIT_CONTRACT,\n  setContract,\n  setPopup,\n  GET_BALANCE,\n  getBalance,\n  setBalance,\n  WITHDRAW_BALANCE\n} from './action'\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport { switchMap, filter, mergeMap, catchError } from 'rxjs/operators'\nimport { from, of } from 'rxjs'\nimport Web3 from 'web3'\nimport { NO_PROVIDER } from '@Src/contants/errorCode'\nimport { newContract, detectNetwork } from '@Utils/contractUtils'\n\n// async function transfer(account: string | null) {\n//   if (\n//     !account ||\n//     typeof location === 'undefined' ||\n//     location.href.indexOf('localhost') == -1\n//   ) {\n//     return\n//   }\n//   await web3.eth.sendTransaction({\n//     from: '0x1ce421937a6f59bf58faafe316d23aaed690da18',\n//     to: account,\n//     value: 2000000000000000000\n//   })\n//   console.log(`transfer 2 eth to ${account} success!`)\n// }\n\nconst checkContract = (state$: any) => {\n  const commonReducer = state$.value.get('common')\n  const [txContract, accounts] = [\n    commonReducer.get('txContract'),\n    commonReducer.get('accounts')\n  ]\n  return txContract !== null && accounts.length > 0\n}\n\nexport const initContractEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(INIT_CONTRACT),\n    filter(() => state$.value.get('common').get('txContract') === null),\n    switchMap(async () => {\n      let accounts: string[]\n      let txWeb3: Web3 | null = null\n\n      try {\n        let injectProvider\n        let txContract = null\n        let network = await detectNetwork(null)\n\n        if (typeof web3 === 'undefined' || !process.browser) {\n          window.web3 = {}\n        } else {\n          txWeb3 = new Web3(window.ethereum || web3.currentProvider)\n          network = await detectNetwork(txWeb3)\n          txContract = newContract(txWeb3)\n          window.contract = txContract\n          await window.ethereum.enable()\n        }\n\n        const providers = new Web3().providers\n        injectProvider = new providers.WebsocketProvider(network)\n\n        web3 = new Web3(injectProvider)\n        accounts = txWeb3\n          ? await txWeb3.eth.getAccounts()\n          : await web3.eth.getAccounts()\n\n        const contract = newContract(web3)\n\n        let accountBalance = '0'\n        if (txContract) {\n          accountBalance = await txContract.methods\n            .userBalances(accounts[0])\n            .call()\n        }\n\n        return setContract({\n          txContract,\n          contract,\n          userAddress: accounts.length ? accounts[0] : null,\n          accounts,\n          accountBalance,\n          error: null\n        })\n      } catch (e) {\n        return setPopup({\n          showPop: true,\n          messageKey: NO_PROVIDER.key\n        })\n      }\n    })\n  )\n\nexport const getBalanceEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(GET_BALANCE),\n    filter(() => checkContract(state$)),\n    switchMap(async () => {\n      const commonReducer = state$.value.get('common')\n      const [txContract, accounts] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('accounts')\n      ]\n\n      try {\n        let accountBalance = '0'\n        if (txContract && accounts.length) {\n          accountBalance = await txContract.methods\n            .userBalances(accounts[0])\n            .call()\n        }\n\n        return setBalance(accountBalance)\n      } catch (err) {\n        return setPopup({\n          showPop: true,\n          popMessage: 'get balance error'\n        })\n      }\n    })\n  )\n\nexport const withdrawEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(WITHDRAW_BALANCE),\n    filter(() => checkContract(state$)),\n    switchMap(() => {\n      const commonReducer = state$.value.get('common')\n      const [txContract, accounts] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('accounts')\n      ]\n\n      return from(\n        txContract.methods.userWithdraw().send({\n          from: accounts[0]\n        })\n      ).pipe(\n        mergeMap((response: any) => {\n          return of(\n            setPopup({\n              showPop: true,\n              popMessage: 'Tx hash : ' + response.data\n            }),\n            getBalance()\n          )\n        }),\n        catchError((err: Error) => {\n          return of(\n            setPopup({\n              showPop: true,\n              messageKey: 'withdraw.error'\n            })\n          )\n        })\n      )\n    })\n  )\n\nexport default [initContractEpic, getBalanceEpic, withdrawEpic]\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport Language from '@material-ui/icons/Language'\nimport { Helmet } from 'react-helmet'\n\nconst imageDir = '/landing/images/'\n\nconst LandingCtr = styled('div')<{ show: boolean }>`\n  margin-top: -60px;\n  opacity: ${props => (props.show ? 1 : 0)};\n`\n\nconst StyledUl = styled('ul')({\n  right: 0,\n  transform: 'translateX(50%)'\n})\n\nconst StyleId = 'landing-link'\n\nclass Landing extends React.PureComponent<InjectedIntlProps> {\n  private ref: HTMLElement | null = null\n  private headerRef: HTMLElement | null = null\n\n  private scriptRef: React.RefObject<HTMLScriptElement> = React.createRef()\n  private scriptRef2: React.RefObject<HTMLScriptElement> = React.createRef()\n\n  public state = {\n    show: false\n  }\n\n  public componentDidMount() {\n    if (process.browser) {\n      this.headerRef = document.getElementById('project-header')\n      this.ref = document.getElementById('particle-body')\n      if (this.ref && this.headerRef) {\n        this.ref.style.visibility = 'hidden'\n        this.headerRef.style.visibility = 'hidden'\n      }\n\n      let head = document.getElementsByTagName('head')[0]\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = '/landing/styles/layout.css'\n      link.id = StyleId\n\n      // MAGIC\n      link.onload = () => {\n        this.setState({\n          show: true\n        })\n      }\n      head.appendChild(link)\n    }\n  }\n\n  public componentWillUnmount() {\n    if (process.browser) {\n      const LinkDom = document.getElementById(StyleId)\n      LinkDom && LinkDom.remove()\n    }\n\n    if (this.ref && this.headerRef) {\n      this.ref.style.visibility = 'visible'\n      this.headerRef.style.visibility = 'visible'\n    }\n\n    if (this.scriptRef.current && this.scriptRef2.current) {\n      this.scriptRef.current.remove()\n      this.scriptRef2.current.remove()\n    }\n  }\n\n  public render() {\n    const { intl } = this.props\n    return (\n      <LandingCtr show={this.state.show}>\n        {/* ################################################################################################ */}\n        {/* ################################################################################################ */}\n        {/* ################################################################################################ */}\n        {/* Top Background Image Wrapper */}\n        {this.state.show ? (\n          <React.Fragment>\n            <div\n              className='bgded'\n              style={{\n                backgroundImage: `url(\"${imageDir}backgrounds/walk.jpg\")`\n              }}\n            >\n              {/* ################################################################################################ */}\n              <div className='wrapper row1'>\n                <header id='header' className='hoc clear'>\n                  {/* ################################################################################################ */}\n                  <div id='logo' className='fl_left'>\n                    <h1>\n                      <a href='/'>CoinChallenges</a>\n                    </h1>\n                  </div>\n                  <nav id='mainav' className='fl_right'>\n                    <ul className='clear'>\n                      <li>\n                        <a className='drop' href='#'>\n                          <Language />\n                        </a>\n                        <StyledUl>\n                          <li>\n                            <Link to='/?l=zh-TW'>繁體中文</Link>\n                          </li>\n                          <li>\n                            <Link to='/?l=zh-CN'>简体中文</Link>\n                          </li>\n                          <li>\n                            <Link to='/?l=en'>English</Link>\n                          </li>\n                        </StyledUl>\n                      </li>\n                    </ul>\n                  </nav>\n                  {/* ################################################################################################ */}\n                </header>\n              </div>\n              {/* ################################################################################################ */}\n              {/* ################################################################################################ */}\n              {/* ################################################################################################ */}\n              <section id='pageintro' className='hoc clear'>\n                <div>\n                  {/* ################################################################################################ */}\n                  <h2 className='heading'>\n                    {intl.formatMessage({ id: 'landing.start.title' })}\n                    <br />\n                    <strong>\n                      {intl.formatMessage({ id: 'landing.start.subtitle' })}\n                    </strong>\n                  </h2>\n                  <p>{intl.formatMessage({ id: 'landing.start.desc' })}</p>\n                  <footer>\n                    <ul className='nospace inline pushright'>\n                      <li>\n                        <a className='btn' href='#'>\n                          {intl.formatMessage({ id: 'download.app' })}\n                        </a>\n                      </li>\n                    </ul>\n                  </footer>\n                  {/* ################################################################################################ */}\n                </div>\n              </section>\n              {/* ################################################################################################ */}\n            </div>\n            {/* End Top Background Image Wrapper */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            <div className='wrapper row3'>\n              <main className='hoc container clear btmpad-none'>\n                {/* main body */}\n                {/* ################################################################################################ */}\n                <div className='sectiontitle center'>\n                  <h6 className='heading'>\n                    {intl.formatMessage({ id: 'landing.blocks.title' })}\n                  </h6>\n                  <p>{intl.formatMessage({ id: 'landing.blocks.desc' })}</p>\n                </div>\n                <ul className='nospace group center btmspace-80'>\n                  <li className='one_third first'>\n                    <article>\n                      <i className='btmspace-30 fa fa-3x fa-apple' />\n                      <h6 className='heading font-x1'>\n                        {intl.formatMessage({ id: 'landing.block1.title' })}\n                      </h6>\n                      <p className='btmspace-30'>\n                        {intl.formatMessage({ id: 'landing.block1.desc' })}\n                      </p>\n                    </article>\n                  </li>\n                  <li className='one_third'>\n                    <article>\n                      <i className='btmspace-30 fa fa-3x fa-code' />\n                      <h6 className='heading font-x1'>\n                        {intl.formatMessage({ id: 'landing.block2.title' })}\n                      </h6>\n                      <p className='btmspace-30'>\n                        {intl.formatMessage({ id: 'landing.block2.desc' })}\n                      </p>\n                    </article>\n                  </li>\n                  <li className='one_third'>\n                    <article>\n                      <i className='btmspace-30 fa fa-3x fa-calendar-check-o' />\n                      <h6 className='heading font-x1'>\n                        {intl.formatMessage({ id: 'landing.block3.title' })}\n                      </h6>\n                      <p className='btmspace-30'>\n                        {intl.formatMessage({ id: 'landing.block3.desc' })}\n                      </p>\n                    </article>\n                  </li>\n                </ul>\n                {/* <figure>\n                  <img src={SnapImg} alt='' />\n                </figure> */}\n                {/* ################################################################################################ */}\n                {/* / main body */}\n                <div className='clear' />\n              </main>\n            </div>\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            <div\n              className='wrapper bgded overlay coloured'\n              style={{\n                backgroundImage: `url(\"${imageDir}backgrounds/02.jpg\")`\n              }}\n            >\n              <section className='hoc container clear'>\n                {/* ################################################################################################ */}\n                <div className='sectiontitle center'>\n                  <h6 className='heading'>\n                    {intl.formatMessage({ id: 'section.tips' })}\n                  </h6>\n                  <p>{intl.formatMessage({ id: 'section.tips.desc' })}</p>\n                </div>\n                <ul className='nospace group infoboxes'>\n                  <li className='one_third first'>\n                    <article className='infobox'>\n                      <i className='fa fa-codepen' />\n                      <p>\n                        <a>\n                          {intl.formatMessage({ id: 'section.social.network' })}\n                        </a>\n                      </p>\n                      <h6\n                        dangerouslySetInnerHTML={{\n                          __html: intl.formatMessage({\n                            id: 'section.social.network.desc'\n                          })\n                        }}\n                      />\n                    </article>\n                  </li>\n                  <li className='one_third'>\n                    <article className='infobox'>\n                      <i className='fa fa-scissors' />\n                      <p>\n                        <a>{intl.formatMessage({ id: 'section.paid.off' })}</a>\n                      </p>\n                      <h6\n                        dangerouslySetInnerHTML={{\n                          __html: intl.formatMessage({\n                            id: 'section.paid.off.desc'\n                          })\n                        }}\n                      />\n                    </article>\n                  </li>\n                  <li className='one_third'>\n                    <article className='infobox'>\n                      <i className='fa fa-crosshairs' />\n                      <p>\n                        <a>\n                          {intl.formatMessage({ id: 'section.invite.friend' })}\n                        </a>\n                      </p>\n                      <h6\n                        dangerouslySetInnerHTML={{\n                          __html: intl.formatMessage({\n                            id: 'section.invite.friend.desc'\n                          })\n                        }}\n                      />\n                    </article>\n                  </li>\n                </ul>\n                {/* ################################################################################################ */}\n                <div className='clear' />\n              </section>\n            </div>\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            <div\n              className='wrapper row4 bgded overlay'\n              style={{\n                backgroundImage: `url(\"${imageDir}backgrounds/04.jpg\")`\n              }}\n            >\n              <footer id='footer' className='hoc clear'>\n                {/* ################################################################################################ */}\n                <div className='one_third first'>\n                  <h6 className='heading'>\n                    {intl.formatMessage({ id: 'about.us' })}\n                  </h6>\n                  <p>{intl.formatMessage({ id: 'about.desc' })}</p>\n                  {/* <nav>\n                    <ul className='nospace'>\n                      <li>\n                        <a href='index.html'>\n                          <i className='fa fa-lg fa-home' />\n                        </a>\n                      </li>\n                      <li>\n                        <a href='#'>About</a>\n                      </li>\n                      <li>\n                        <a href='#'>Contact</a>\n                      </li>\n                      <li>\n                        <a href='#'>Terms</a>\n                      </li>\n                      <li>\n                        <a href='#'>Privacy</a>\n                      </li>\n                    </ul>\n                  </nav> */}\n                </div>\n                <div className='one_third'>\n                  <h6 className='heading'>\n                    {intl.formatMessage({ id: 'contact.info' })}\n                  </h6>\n                  <ul className='nospace btmspace-30 linklist contact'>\n                    <li>\n                      <i className='fa fa-facebook-square' />\n                      <address>Coin Challenges</address>\n                    </li>\n                    <li>\n                      <i className='fa fa-envelope-o' />{' '}\n                      coin.challenge.hi@gmail.com\n                    </li>\n                  </ul>\n                  <ul className='faico clear'>\n                    <li>\n                      <a className='faicon-facebook' href='#'>\n                        <i className='fa fa-facebook' />\n                      </a>\n                    </li>\n                    <li>\n                      <a className='faicon-twitter' href='#'>\n                        <i className='fa fa-twitter' />\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div className='one_third'>\n                  <h6 className='heading'>Non lacus vivamus quis</h6>\n                  <article>\n                    <a href='#'>\n                      <img\n                        className='btmspace-15'\n                        src={`${imageDir}/320x140.png`}\n                        alt=''\n                      />\n                    </a>\n                    <h6 className='nospace font-x1'>\n                      <a href='#'>Sed congue vel gravida</a>\n                    </h6>\n                    <time\n                      className='font-xs block btmspace-10'\n                      dateTime='2045-04-05'\n                    >\n                      Thursday, 5<sup>th</sup> April 2045\n                    </time>\n                    <p className='nospace'>\n                      Viverra interdum quam in hac habitasse platea dictumst sed\n                      pede volutpat […]\n                    </p>\n                  </article>\n                </div>\n                {/* ################################################################################################ */}\n              </footer>\n            </div>\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            <div className='wrapper row5'>\n              <div id='copyright' className='hoc clear'>\n                {/* ################################################################################################ */}\n                <p className='fl_left'>\n                  Copyright © 2019 - All Rights Reserved -{' '}\n                  <a href='#'>coin.walk.com</a>\n                </p>\n                <p className='fl_right'>\n                  Template by{' '}\n                  <a\n                    target='_blank'\n                    href='http://www.os-templates.com/'\n                    title='Free Website Templates'\n                  >\n                    OS Templates\n                  </a>\n                </p>\n                {/* ################################################################################################ */}\n              </div>\n            </div>\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            {/* ################################################################################################ */}\n            <a id='backtotop' href='#top'>\n              <i className='fa fa-chevron-up' />\n            </a>\n            <Helmet>\n              <script\n                src='/landing/jquery.mobilemenu.js'\n                defer\n                ref={this.scriptRef2}\n              />\n            </Helmet>\n          </React.Fragment>\n        ) : (\n          <Helmet>\n            <script src='/landing/jquery.min.js' defer ref={this.scriptRef} />\n          </Helmet>\n        )}\n      </LandingCtr>\n    )\n  }\n}\n\nexport default injectIntl(Landing)\n","module.exports = __webpack_public_path__ + \"static/media/loading.a4f2cb80.gif\";","export const NO_PROVIDER = {\n  error: 511,\n  key: 'providerNotFound'\n}\n","import React, { ComponentType, PureComponent } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport AppBar, { AppBarProps } from '@material-ui/core/AppBar'\nimport { APP_THEME, APP_FONT_COLOR } from '@Src/contants/themeColor'\nimport styled from 'styled-components'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Fade from '@material-ui/core/Fade'\nimport Language from '@material-ui/icons/Language'\nimport MonetizationOn from '@material-ui/icons/MonetizationOn'\nimport { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport { supportLang } from '@Src/contants/common'\nimport { connect } from 'react-redux'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport { breakPoint } from '@Src/contants/common'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport { Dispatch } from 'redux'\nimport { withdrawBalance } from '@Epics/commonEpic/action'\nimport Web3 from 'web3'\n\nconst StyledAppBar = styled(AppBar)({\n  width: '100vw',\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  background: APP_THEME,\n  textAlign: 'center',\n  lineHeight: '50px',\n  color: APP_FONT_COLOR,\n  a: {\n    color: APP_FONT_COLOR,\n    textDecoration: 'none'\n  }\n}) as ComponentType<AppBarProps>\n\nconst LangIcon = styled(Language)({\n  position: 'absolute',\n  top: 15,\n  right: 10\n}) as ComponentType<SvgIconProps>\n\nconst MonetizationOnIcon = styled(MonetizationOn)({\n  position: 'absolute',\n  top: 15,\n  right: 42,\n  cursor: 'pointer'\n}) as ComponentType<SvgIconProps>\n\nconst Balance = styled('div')({\n  position: 'absolute',\n  top: 2,\n  right: 70,\n  color: '#fff',\n  fontSize: '14px',\n  [`@media (max-width: ${breakPoint})`]: {\n    display: 'none'\n  }\n})\n\ninterface BarProp extends RouteComponentProps, InjectedIntlProps {\n  title: string\n  balance: string\n  withdrawBalance: () => void\n}\n\ninterface BarState {\n  anchorEl: null | EventTarget\n  openWithdraw: boolean\n  isWithrawing: boolean\n}\n\nconst LangMenu = [\n  {\n    value: supportLang[0],\n    title: 'English'\n  },\n  {\n    value: supportLang[1],\n    title: '繁體中文'\n  },\n  {\n    value: supportLang[2],\n    title: '简体中文'\n  }\n]\n\nconst { REACT_APP_COIN = 'ETH' } = process.env\nclass ButtonAppBar extends PureComponent<BarProp, BarState> {\n  public state = {\n    anchorEl: null,\n    openWithdraw: false,\n    isWithrawing: false\n  }\n\n  private onOpenWithdraw = () => {\n    this.setState({\n      openWithdraw: true\n    })\n  }\n\n  private onCloseWithraw = () => {\n    this.setState({\n      openWithdraw: false\n    })\n  }\n\n  private onWithdraw = () => {\n    this.props.withdrawBalance()\n    this.setState({\n      openWithdraw: false,\n      isWithrawing: true\n    })\n  }\n\n  private handeClick = (e: React.MouseEvent) => {\n    this.setState({\n      anchorEl: e.currentTarget\n    })\n  }\n\n  private handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  private onSelectLang = (lang: string) => () => {\n    const { history } = this.props\n\n    history.replace(`${history.location.pathname}?l=${lang}`)\n    this.handleClose()\n  }\n\n  public render() {\n    const { anchorEl, isWithrawing } = this.state\n    const { balance, intl } = this.props\n\n    const formatBalance = Number(Number(Web3.utils.fromWei(balance)).toFixed(8))\n\n    const open = Boolean(anchorEl)\n    return (\n      <StyledAppBar id='project-header'>\n        <h1>\n          <Link to='/'>{this.props.title}</Link>\n          {Number(balance) > 0 && !isWithrawing ? (\n            <React.Fragment>\n              <Balance>\n                {formatBalance} {REACT_APP_COIN}\n              </Balance>\n              <MonetizationOnIcon onClick={this.onOpenWithdraw} />\n            </React.Fragment>\n          ) : null}\n\n          <LangIcon onClick={this.handeClick} />\n        </h1>\n        <div style={{ position: 'relative' }}>\n          <Menu\n            id='fade-menu'\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            TransitionComponent={Fade}\n          >\n            {LangMenu.map(item => (\n              <MenuItem\n                key={item.value}\n                onClick={this.onSelectLang(item.value)}\n              >\n                {item.title}\n              </MenuItem>\n            ))}\n          </Menu>\n        </div>\n        <Dialog\n          open={this.state.openWithdraw}\n          onClose={this.onCloseWithraw}\n          aria-labelledby='alert-dialog-title'\n          aria-describedby='alert-dialog-description'\n        >\n          <DialogTitle id='alert-dialog-title'>\n            {intl.formatMessage({ id: 'withdraw' })}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id='alert-dialog-description'>\n              {intl.formatMessage(\n                { id: 'withdraw.confirm.desc' },\n                {\n                  balance: `${formatBalance} ${REACT_APP_COIN}`\n                }\n              )}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.onCloseWithraw} color='primary'>\n              {intl.formatMessage({ id: 'cancel' })}\n            </Button>\n            <Button onClick={this.onWithdraw} color='primary' autoFocus>\n              {intl.formatMessage({ id: 'confirm' })}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </StyledAppBar>\n    )\n  }\n}\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  const commonState = state.get('common') as CommonStateType\n  return {\n    balance: commonState.get('accountBalance')\n  }\n}\n\nconst mapDispathToProps = (dispatch: Dispatch) => ({\n  withdrawBalance: () => dispatch(withdrawBalance())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(withRouter(injectIntl(ButtonAppBar)))\n","export { default } from './Header'\n","import Web3 from 'web3'\nimport CoinChallengs from '@Src/contracts/CoinChallenges.json'\nimport { ChallengeType } from '@Src/typing/globalTypes'\n\nlet networkAddress =\n  'wss://ropsten.infura.io/ws/v3/9d6ecc41833d434a921bf5de878f834f'\nlet contractAddress = '0xADED855550796DDA123f13d236dFEA12aa102D0B'\n\nexport const newContract = (web3Interface: Web3, address?: string) => {\n  let newContract = null\n  try {\n    newContract = new web3Interface.eth.Contract(\n      CoinChallengs.abi,\n      address || contractAddress,\n      {\n        gas: 6000000\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n  return newContract\n}\n\nexport const parseChallenge = (response: any): ChallengeType => {\n  const challenge = {\n    round: Number(response._currentRound),\n    targetDays: Number(response._targetDays),\n    totalDays: Number(response._totalDays),\n    completeDays: Number(response._completeDays),\n    startTimestamp: Number(response._startTimestamp) * 1000,\n    sponserSize: Number(response._sponsorSize),\n    amount: Number(Web3.utils.fromWei(response._amount)),\n    totalSponsorAmount: Number(\n      Web3.utils.fromWei(response._totalSponsorAmount)\n    ),\n    goal: response._goal\n  }\n\n  return challenge\n}\n\nexport const detectNetwork = async (web3: Web3 | null) => {\n  let netId = 0\n  if (!web3) {\n    netId =\n      typeof location !== undefined && location.host.indexOf('localhost') > -1\n        ? 0\n        : 3\n  } else {\n    netId = await web3.eth.net.getId()\n  }\n\n  switch (netId) {\n    case 1: //main net\n      break\n    case 3: //ropsten\n      networkAddress =\n        'wss://ropsten.infura.io/ws/v3/9d6ecc41833d434a921bf5de878f834f'\n      contractAddress = '0xADED855550796DDA123f13d236dFEA12aa102D0B'\n      break\n    default:\n      networkAddress = 'ws://localhost:7545'\n      contractAddress = '0x21e4624c5a0b3fda81d0833d412dded2bb3a7a7c'\n  }\n  return networkAddress\n}\n","export const CREATE_CHALLENGE_GROUP = 'CREATE_CHALLENGE_GROUP'\nexport const SET_CREATE_RESULT = 'SET_CREATE_RESULT'\n\nexport const newChallengeGroup = (payload: object) => ({\n  type: CREATE_CHALLENGE_GROUP,\n  payload\n})\n\nexport interface SetResultProp {\n  response: {\n    status?: boolean\n    gasUsed?: number\n  }\n  error: boolean\n}\n\nexport const setCreateResult = (payload: SetResultProp) => ({\n  type: SET_CREATE_RESULT,\n  payload\n})\n","import React from 'react'\nimport Loading from '@Src/images/loading.gif'\nimport styled from 'styled-components'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\n\ninterface TransactionProp extends InjectedIntlProps {\n  txHash?: string\n  classNames?: string\n}\n\nconst Div = styled('div')({\n  position: 'relative',\n  fontSize: 14,\n  lineHeight: '16px'\n})\n\nconst Img = styled('img')({\n  width: '100px',\n  display: 'block',\n  margin: '0 auto'\n})\n\nconst Href = styled('a')({\n  position: 'absolute',\n  transform: 'translateX(-50%)',\n  left: '50%',\n  bottom: '-10px',\n  color: '#FF5722'\n})\n\nfunction Transaction({ txHash, classNames, intl }: TransactionProp) {\n  return (\n    <Div>\n      {txHash ? (\n        <Href\n          href={`https://ropsten.etherscan.io/tx/${txHash}`}\n          target='_blank'\n        >\n          {intl.formatMessage({ id: 'waitConfirm' })}\n        </Href>\n      ) : null}\n\n      <Img src={Loading} className={classNames} />\n    </Div>\n  )\n}\n\nexport default injectIntl(Transaction)\n","import { detect } from 'detect-browser'\nimport { Decimal } from 'decimal.js'\nimport { matchPath } from 'react-router-dom'\nimport { supportLang } from '@Src/contants/common'\nimport Cookies from 'js-cookie'\nimport { RouteComponentProps } from 'react-router'\n\nconst browser = detect()\n\nexport const getMetmaskUrl = () => {\n  switch (browser && browser.name) {\n    case 'chrome':\n      return 'https://chrome.google.com/webstore/detail/nkbihfbeogaeaoehlefnkodbefgpgknn'\n    case 'firefox':\n      return 'https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/'\n    case 'opera':\n      return 'https://addons.opera.com/en/extensions/details/metamask/'\n    default:\n      return null\n  }\n}\n\nexport const formatPercent = (a: number, b: number) => {\n  if (b === 0 || a === 0) {\n    return '0%'\n  }\n  return Number(new Decimal((a * 100) / b).toFixed(2).toString()) + '%'\n}\n\nexport const isUrlValid = (url: string) => {\n  return url.match(\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/\n  )\n}\n\nexport const formatNumber = (val: number) => {\n  val = val || 0\n  return new Decimal(val).toPrecision(5)\n}\n\ninterface MatchParam {\n  params: {\n    lng: string\n  }\n}\n\nexport const matchPathFunc = (pathname: string) =>\n  matchPath(pathname, {\n    path: '/:lng/**/',\n    strict: false\n  }) as MatchParam\n\nexport const parseLangParams = (search: string) => {\n  const urlParams = new URLSearchParams(search)\n  return urlParams.get('l') || ''\n}\n\nexport const parseLangPath = (search: string): string => {\n  let lng = parseLangParams(search)\n  if (lng === '') {\n    lng = Cookies.get('_coin_lng_') || ''\n  }\n\n  if (!lng || lng === '') {\n    if (typeof window !== 'undefined') {\n      lng = require('browser-locale')()\n    }\n    lng = lng.indexOf('en') > -1 ? 'en' : lng\n    let splitLng = lng ? lng.split(/-|_/) : ['en']\n    lng =\n      splitLng.length > 1\n        ? `${splitLng[0]}-${splitLng[1].toUpperCase()}`\n        : splitLng[0]\n  }\n\n  if (supportLang.indexOf(lng) < 0) {\n    lng = 'en'\n  }\n\n  Cookies.set('_coin_lng_', lng)\n  return lng\n}\n\ninterface ChangeRoute extends RouteComponentProps {\n  match: any\n}\nexport const changeRoute = ({ location, history }: ChangeRoute) => {\n  const lng = parseLangParams(location.search)\n  if (lng === '' || lng !== 'en') {\n    history.replace(location.pathname + `?l=${parseLangPath(location.search)}`)\n  }\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport TextField from '@material-ui/core/TextField'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\nimport Contract from 'web3/eth/contract'\nimport { ChallengeGroupType } from '@Src/typing/globalTypes'\nimport Logo from '@Src/images/logo.png'\n\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport {\n  newChallengeGroup,\n  setCreateResult,\n  SetResultProp\n} from '@Epics/challengeGroupEpic/action'\nimport {\n  checkWallet,\n  setPopup,\n  SetPopProps,\n  initContract\n} from '@Epics/commonEpic/action'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport { ChallengeGroupStateType } from '@Reducers/challengeGroupReducer'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\n\nimport Transaction from '@Components/Transaction'\nimport { APP_THEME } from '@Src/contants/themeColor'\nimport { isUrlValid } from '@Src/utils'\nimport { changeRoute } from '@Utils/index'\n\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport web3 from 'web3'\n\nconst Form = styled('form')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexDirection: 'column',\n  alignItems: 'center',\n  '.textField': {\n    background: '#fff',\n    zIndex: 1,\n    '&:focus label': {\n      color: `${APP_THEME} !important`\n    }\n  },\n  '.button': {\n    backgroundColor: APP_THEME,\n    color: '#fff',\n    padding: '0 40px',\n    marginTop: '10px',\n    '&:hover': {\n      backgroundColor: APP_THEME,\n      opacity: 0.9\n    }\n  }\n})\n\nconst Styles = {\n  marginTop: '30px',\n  width: '100%',\n  maxWidth: '400px'\n}\n\nconst Icon = styled('img')({\n  margin: '20px 0',\n  maxWidth: '200px',\n  zIndex: 1\n})\n\nconst LabelTxt = styled('span')({\n  fontSize: '20px'\n})\n\nconst WaitingBlk = styled('div')({\n  zIndex: 1,\n  marginBottom: '10px',\n  width: '100%',\n  textAlign: 'center'\n})\n\nconst ErrorTxt = styled('div')({\n  fontSize: '12px',\n  color: 'red',\n  width: '100%',\n  maxWidth: '400px',\n  paddingLeft: '5px',\n  margin: '10px 0 -15px',\n  textAlign: 'left'\n})\n\nconst FormStyle = {\n  maxWidth: '400px',\n  margin: '20px 0 10px',\n  backgroundColor: '#fff'\n}\n\nconst MenuStyle = {\n  style: {\n    maxHeight: '300px',\n    padding: '0 10px'\n  }\n}\n\nconst SelectStyle = {\n  padding: '0 10px 0 15px'\n}\n\nfunction Label({ text }: { text: string }) {\n  return <LabelTxt>{text}</LabelTxt>\n}\n\nconst defaultGroupState = {\n  id: '',\n  name: '',\n  url: '',\n  minDays: '0',\n  maxDays: '0',\n  maxDelayDays: '7',\n  minAmount: ''\n}\n\ntype CreateChallengeGroupProp = {\n  contract: Contract | null\n  isConfirming: boolean\n  txHash?: string\n  createResult: ChallengeGroupStateType\n  newChallengeGroup: (payload: ChallengeGroupType) => void\n  checkWallet: () => void\n  setCreateResult: (payload: SetResultProp) => void\n  setPopup: (payload: SetPopProps) => void\n  initContract: () => void\n}\n\ninterface ErrorKeys extends ChallengeGroupType {\n  agent?: any\n}\n\ntype ErrorProp = { [s in keyof ErrorKeys]?: string | undefined }\ntype StateProp = {\n  challengeGroup: ChallengeGroupType\n  error: ErrorProp\n  agent: string\n  canSend: boolean\n}\n\nconst hasError = (val?: string) => val !== undefined && val !== ''\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  const commonReducer = state.get('common') as CommonStateType\n  return {\n    contract: commonReducer.get('contract'),\n    isConfirming: commonReducer.get('isConfirming'),\n    txHash: commonReducer.get('txHash'),\n    createResult: state.get('challengeGroup') as ChallengeGroupStateType\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  initContract: () => dispatch(initContract()),\n  checkWallet: () => dispatch(checkWallet()),\n  setPopup: (payload: SetPopProps) => dispatch(setPopup(payload)),\n  setCreateResult: (payload: SetResultProp) =>\n    dispatch(setCreateResult(payload)),\n  newChallengeGroup: (payload: ChallengeGroupType) => {\n    dispatch(\n      newChallengeGroup({\n        ...payload,\n        dispatch\n      })\n    )\n  }\n})\nclass CreateChallengeGroup extends React.Component<\n  CreateChallengeGroupProp & InjectedIntlProps & RouteComponentProps,\n  StateProp\n> {\n  static LabelProp = {\n    shrink: true\n  }\n\n  public state = {\n    challengeGroup: { ...defaultGroupState } as ChallengeGroupType,\n    error: {\n      minDays: '',\n      maxDays: ''\n    } as ErrorProp,\n    agent: '',\n    canSend: false\n  }\n\n  private onTextChange = (key: keyof ChallengeGroupType) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[key] = val\n    error[key] = val.length <= 0 ? `error.invalid.group.${key}` : ''\n    this.setState(\n      {\n        challengeGroup: { ...challengeGroup },\n        error: { ...error }\n      },\n      this.checkForm\n    )\n  }\n\n  private onDayChange = (key: keyof ChallengeGroupType) => (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    let val = e.target.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[key] = val\n    if (Number(challengeGroup['maxDays']) < Number(challengeGroup['minDays'])) {\n      challengeGroup['maxDays'] = challengeGroup['minDays']\n    }\n    error['minDays'] =\n      Number(challengeGroup['minDays']) <= 0 ? 'error.empty.min.days' : ''\n    error['maxDays'] =\n      Number(challengeGroup['maxDays']) <= 0 ? 'error.empty.max.days' : ''\n    this.setState(\n      {\n        challengeGroup: { ...challengeGroup },\n        error: {\n          ...error\n        }\n      },\n      this.checkForm\n    )\n  }\n\n  private onDelayDayChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    let val = e.target.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup.maxDelayDays = val\n    this.setState(\n      {\n        challengeGroup: { ...challengeGroup },\n        error: { ...error }\n      },\n      this.checkForm\n    )\n  }\n\n  private onAmountChange = (field: keyof ChallengeGroupType) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[field] = val\n    error[field] = Number(val) <= 0 ? 'error.min.amount' : ''\n    this.setState(\n      {\n        challengeGroup,\n        error\n      },\n      this.checkForm\n    )\n  }\n\n  private onUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup['url'] = val\n    error['url'] = !isUrlValid(val) ? 'error.invalid.url' : ''\n    this.setState(\n      {\n        challengeGroup: { ...challengeGroup },\n        error: { ...error }\n      },\n      this.checkForm\n    )\n  }\n\n  private onAgentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = e.currentTarget.value as string\n    const isEmpty = val === ''\n    const { error } = this.state\n    error['agent'] =\n      !isEmpty && !web3.utils.isAddress(val) ? 'invalidAddress' : ''\n    this.setState(\n      {\n        agent: val,\n        error: { ...error }\n      },\n      this.checkForm\n    )\n  }\n\n  private checkForm = () => {\n    let hasError = false\n\n    for (let field in this.state.challengeGroup) {\n      hasError =\n        hasError ||\n        (field !== 'maxDelayDays' &&\n          this.state.challengeGroup[field] === defaultGroupState[field])\n      if (hasError) {\n        break\n      }\n    }\n\n    if (!hasError) {\n      for (let field in this.state.error) {\n        hasError = hasError || this.state.error[field] !== ''\n        if (hasError) {\n          break\n        }\n      }\n    }\n\n    this.setState({\n      canSend: !hasError\n    })\n\n    return hasError\n  }\n\n  private onSubmit = () => {\n    let hasError = this.checkForm()\n\n    if (hasError) {\n      this.props.setPopup({\n        showPop: true,\n        messageKey: 'createDataError'\n      })\n      return\n    }\n    this.props.checkWallet()\n    this.props.newChallengeGroup({\n      ...this.state.challengeGroup,\n      agent: this.state.agent\n    })\n  }\n\n  private errorTxt = (key?: string, props?: { [key: string]: any }) => {\n    if (key && hasError(key)) {\n      props = props || []\n      return (\n        <ErrorTxt>\n          {this.props.intl.formatMessage({ id: key }, { ...props })}\n        </ErrorTxt>\n      )\n    }\n    return null\n  }\n\n  public componentDidUpdate() {\n    const response = this.props.createResult.get('response')\n    if (response.status) {\n      this.props.setCreateResult({\n        response: {},\n        error: false\n      })\n      this.setState({ challengeGroup: defaultGroupState, agent: '' })\n    }\n  }\n\n  public componentDidMount() {\n    const { history, location, initContract } = this.props\n    changeRoute({ history, location, match: {} })\n    initContract()\n  }\n\n  public render() {\n    const { challengeGroup, error, agent } = this.state\n    const { intl, isConfirming, txHash } = this.props\n\n    return (\n      <Form noValidate autoComplete='off' style={{ padding: '0 10px' }}>\n        <Icon src={Logo} />\n        {this.errorTxt(error.id)}\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupId' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          type='number'\n          placeholder='e.g: 5566'\n          value={challengeGroup.id}\n          onChange={this.onTextChange('id')}\n          error={hasError(error.id)}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        {this.errorTxt(error.name)}\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupName' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          value={challengeGroup.name}\n          onChange={this.onTextChange('name')}\n          error={hasError(error.name)}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        {this.errorTxt(error.url)}\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupCover' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          value={challengeGroup.url}\n          onChange={this.onUrlChange}\n          error={hasError(error.url)}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n\n        <FormControl\n          variant='outlined'\n          fullWidth={true}\n          style={FormStyle}\n          required\n        >\n          <InputLabel htmlFor='outlined-age-simple'>\n            {intl.formatMessage({ id: 'minChallengeDays' })}{' '}\n          </InputLabel>\n          <Select\n            MenuProps={MenuStyle}\n            value={challengeGroup.minDays}\n            onChange={this.onDayChange('minDays')}\n            style={SelectStyle}\n            input={<OutlinedInput labelWidth={150} />}\n          >\n            {new Array(79).fill(0).map((_data: number, index: number) => (\n              <MenuItem key={`option-${index}`} value={index + 12}>\n                {index + 12}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl\n          variant='outlined'\n          fullWidth={true}\n          style={FormStyle}\n          required\n        >\n          <InputLabel htmlFor='outlined-age-simple'>\n            {intl.formatMessage({ id: 'maxChallengeDays' })}\n          </InputLabel>\n          <Select\n            MenuProps={MenuStyle}\n            value={challengeGroup.maxDays}\n            onChange={this.onDayChange('maxDays')}\n            style={SelectStyle}\n            input={<OutlinedInput labelWidth={150} />}\n          >\n            {new Array(90 - Number(challengeGroup.minDays) + 1)\n              .fill(0)\n              .map((_data: number, index: number) => (\n                <MenuItem\n                  key={`option-max-${index}`}\n                  value={(Number(challengeGroup.minDays) || 12) + index}\n                >\n                  {(Number(challengeGroup.minDays) || 12) + index}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n\n        <FormControl\n          variant='outlined'\n          fullWidth={true}\n          style={FormStyle}\n          required\n        >\n          <InputLabel htmlFor='outlined-age-simple'>\n            {intl.formatMessage({ id: 'maxDelayDays' })}\n          </InputLabel>\n          <Select\n            MenuProps={MenuStyle}\n            value={challengeGroup.maxDelayDays}\n            onChange={this.onDelayDayChange}\n            style={SelectStyle}\n            input={<OutlinedInput labelWidth={140} />}\n          >\n            {new Array(90).fill(0).map((_data: number, index: number) => (\n              <MenuItem key={`option-delay-${index}`} value={index + 1}>\n                {index + 1}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        {this.errorTxt(error.minAmount, { coin: process.env.REACT_APP_COIN })}\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'minChallengeAmount' })} />\n          }\n          className='textField'\n          type='number'\n          margin='normal'\n          value={challengeGroup.minAmount}\n          onChange={this.onAmountChange('minAmount')}\n          error={hasError(error.minAmount)}\n          variant='outlined'\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        {this.errorTxt(error.agent)}\n        <TextField\n          label={<Label text={intl.formatMessage({ id: 'agent' })} />}\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          placeholder='e.g 0xa99CeB4475670cCDF31a78232bfA585848598cBA'\n          value={agent}\n          onChange={this.onAgentChange}\n          error={hasError(error.agent)}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n        />\n\n        <br />\n        {isConfirming ? (\n          <WaitingBlk>\n            <Transaction txHash={txHash} classNames='progress' />\n          </WaitingBlk>\n        ) : null}\n        <Button\n          variant='contained'\n          className='button'\n          onClick={this.onSubmit}\n          disabled={!this.state.canSend}\n        >\n          {intl.formatMessage({ id: 'create' })}\n        </Button>\n      </Form>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(CreateChallengeGroup))\n","import React from 'react'\nimport styled from 'styled-components'\nimport { breakPoint } from '@Src/contants/common'\nimport LogoImg from '@Src/images/logo.png'\n\nconst StyledTtitleCtr = styled('div')({\n  position: 'relative',\n  [`@media (max-width: ${breakPoint})`]: {\n    minHeight: 0\n  }\n})\n\nconst StyledTitle = styled('span')({\n  position: 'absolute',\n  top: 0,\n  fontSize: '34px',\n  padding: '20px 0 0 20px',\n  lineHeight: '30px',\n  width: '100%',\n  '.goal': {\n    fontSize: '24px'\n  }\n})\n\nconst Logo = styled('img')({\n  display: 'block',\n  width: '50%',\n  margin: '0 auto'\n})\ninterface ChallengeCardProp {\n  name: string\n  goal: string\n  url: string\n  invalidAddress: boolean\n}\n\nconst ChallengeCard = React.memo(\n  ({ goal, name, url, invalidAddress }: ChallengeCardProp) => (\n    <React.Fragment>\n      {/* <StyledFont>Challenger: {address}</StyledFont> */}\n      <StyledTtitleCtr>\n        <StyledTitle>\n          {invalidAddress ? '' : name}\n          <br />\n          <span className='goal'>{url === '' ? '' : goal}</span>\n        </StyledTitle>\n        {invalidAddress || url === '' ? (\n          <Logo src={LogoImg} />\n        ) : (\n          <img src={url} width='100%' />\n        )}\n      </StyledTtitleCtr>\n    </React.Fragment>\n  )\n)\n\nexport default ChallengeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  APP_LIGHT_BG,\n  APP_FONT_COLOR_DARK,\n  APP_THEME\n} from '@Src/contants/themeColor'\nimport { breakPoint } from '@Src/contants/common'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\nimport { formatPercent } from '@Src/utils'\n\nconst StyledFont = styled('span')({\n  fontSize: '40px',\n  fontWeight: 700,\n  color: APP_THEME,\n  textAlign: 'center'\n})\n\nconst StyledUnitFont = styled('span')({\n  fontSize: 14,\n  color: APP_FONT_COLOR_DARK,\n  opacity: 0.6,\n  wordBreak: 'keep-all'\n})\n\nconst StyledContent = styled('div')({\n  fontSize: 16,\n  color: APP_FONT_COLOR_DARK,\n  opacity: 0.6,\n  margin: '10px auto',\n  lineHeight: '24px',\n  textAlign: 'left',\n  maxWidth: '80%',\n  [`@media (max-width: ${breakPoint})`]: {\n    fontSize: 16,\n    lineHeight: '24px',\n    maxWidth: '100%'\n  }\n})\n\nconst CrowdCtr = styled('div')({\n  display: 'flex',\n  alignItems: 'baseline',\n  justifyContent: 'center'\n})\n\nconst InfoBlk = styled('div')({\n  textAlign: 'center',\n  background: APP_LIGHT_BG,\n  padding: '0 10px',\n  wordBreak: 'break-all'\n})\ninterface InfoCtrProp {\n  bgcolor?: string\n}\n\nconst Grid = styled('div')({\n  width: '50%',\n  padding: '10px 0',\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%'\n  }\n})\n\nconst styles = (_theme: any) => ({\n  lightTooltip: {\n    fontSize: 20\n  }\n})\n\nconst Address = styled('div')({\n  color: 'rgba(0, 0, 0, 0.4)',\n  padding: '10px 0'\n})\n\nconst Amount = styled('div')({\n  fontSize: 40,\n  fontWeight: 700,\n  padding: '10px 0'\n})\n\nconst StyledInfoCtr = styled('div')<InfoCtrProp>`\n  display: flex;\n  background: ${(props: InfoCtrProp) =>\n    props.bgcolor ? props.bgcolor : APP_LIGHT_BG};\n  justify-content: center;\n  align-items: center;\n  @media (max-width: ${breakPoint}) {\n    ${StyledFont} {\n      font-size: 28px;\n      word-break: keep-all;\n    }\n  }\n`\ninterface ChallengeInfoProp extends InjectedIntlProps, WithStyles {\n  address: string\n  completeDays: number\n  targetDays: number\n  totalDays: number\n  amount: number\n  invalidAddress: boolean\n}\n\nconst { REACT_APP_COIN } = process.env\n\nfunction ChallengeInfo({\n  address,\n  completeDays,\n  totalDays,\n  targetDays,\n  amount,\n  intl,\n  invalidAddress\n}: ChallengeInfoProp) {\n  return (\n    <InfoBlk>\n      <Address>{invalidAddress ? '--' : address}</Address>\n      <Amount>\n        {Number(amount)} {REACT_APP_COIN}\n      </Amount>\n      <StyledInfoCtr>\n        <Grid>\n          <StyledFont>\n            {completeDays}/{totalDays}\n          </StyledFont>\n          <StyledUnitFont> {intl.formatMessage({ id: 'days' })}</StyledUnitFont>\n        </Grid>\n        <Grid>\n          <CrowdCtr>\n            <StyledUnitFont>\n              {intl.formatMessage({ id: 'achieve' })}{' '}\n            </StyledUnitFont>\n            <StyledFont>\n              &nbsp;{formatPercent(completeDays, totalDays)}\n            </StyledFont>\n          </CrowdCtr>\n        </Grid>\n      </StyledInfoCtr>\n      <StyledContent>\n        {intl.formatMessage({ id: 'completeDesc' }, { targetDays })}\n      </StyledContent>\n      <StyledContent>\n        {intl.formatMessage({ id: 'sponsorContent' })}\n      </StyledContent>\n    </InfoBlk>\n  )\n}\n\nexport default withStyles(styles)(injectIntl(ChallengeInfo))\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport styled from 'styled-components'\nimport { InjectedIntl } from 'react-intl'\n\nconst FabCtr = styled('span')({\n  display: 'block',\n  textAlign: 'center',\n  padding: 10,\n  zIndex: 6,\n  '.sponsor-btn': {\n    padding: '0 30px',\n    minWidth: '300px',\n    lineHeight: '45px'\n  }\n})\n\ninterface SponsorButtonState {\n  open: boolean\n  amountError: boolean\n  commentError: boolean\n}\n\ninterface SponsorButtonProp {\n  onSponsor: Function\n  intl: InjectedIntl\n}\n\nconst { REACT_APP_COIN } = process.env\n\nclass SponsorButton extends React.PureComponent<\n  SponsorButtonProp,\n  SponsorButtonState\n> {\n  private amountRef: React.RefObject<any> = React.createRef()\n  private commentRef: React.RefObject<any> = React.createRef()\n\n  public state = {\n    open: false,\n    amountError: false,\n    commentError: false\n  }\n\n  private onConfirm = () => {\n    const amount = Number(this.amountRef.current.value)\n    const comment = this.commentRef.current.value.trim()\n    const amountError = amount <= 0\n    const commentError = comment === ''\n    if (amountError || commentError) {\n      this.setState({\n        amountError,\n        commentError\n      })\n      return\n    }\n    this.props.onSponsor({\n      amount,\n      comment\n    })\n    this.handleClose()\n  }\n\n  private handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  private handleOpen = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  public render() {\n    const { intl } = this.props\n    return (\n      <React.Fragment>\n        <FabCtr onClick={this.handleOpen}>\n          <Button className='sponsor-btn' variant='contained' color='primary'>\n            {intl.formatMessage({ id: 'sponsor' })}\n          </Button>\n        </FabCtr>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle\n            id='form-dialog-title'\n            style={{ textTransform: 'uppercase' }}\n          >\n            {intl.formatMessage({ id: 'sponsor' })}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {intl.formatMessage({ id: 'sponsorDesc' })}\n            </DialogContentText>\n            <TextField\n              error={this.state.amountError}\n              required\n              margin='dense'\n              id='amount'\n              label={`${intl.formatMessage({\n                id: 'amount'\n              })} (${REACT_APP_COIN})`}\n              type='number'\n              inputRef={this.amountRef}\n              fullWidth\n            />\n            <TextField\n              error={this.state.commentError}\n              required\n              margin='dense'\n              id='comment'\n              label={intl.formatMessage({ id: 'comment' })}\n              type='text'\n              inputRef={this.commentRef}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='primary'>\n              {intl.formatMessage({ id: 'cancel' })}\n            </Button>\n            <Button onClick={this.onConfirm} color='primary'>\n              {intl.formatMessage({ id: 'confirm' })}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SponsorButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { APP_THEME, APP_LIGHT_BG } from '@Src/contants/themeColor'\nimport { breakPoint } from '@Src/contants/common'\nimport { Sponsor } from '@Src/typing/globalTypes'\nimport web3 from 'web3'\n\nconst SponserCtr = styled('div')({\n  marginTop: '10px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n})\n\nconst BarCtr = styled('div')({\n  width: 'calc(80% - 20px)',\n  minWidth: '558px',\n  background: APP_LIGHT_BG,\n  marginBottom: '15px',\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%',\n    minWidth: 0,\n    padding: '0 10px'\n  }\n})\n\nconst Address = styled('span')({\n  fontSize: '12px',\n  paddingRight: '10px',\n  color: 'rgba(0, 0, 0, 0.3)'\n})\n\nconst CoinTxt = styled('div')({\n  color: APP_THEME,\n  textAlign: 'right'\n})\n\nconst Comment = styled('span')({\n  fontSize: '16px',\n  color: 'rgba(0, 0, 0, 0.8)'\n})\n\nconst SponsorTitle = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '5px',\n  [`@media (max-width: ${breakPoint})`]: {\n    alignItems: 'center',\n    [Address]: {\n      flex: 3,\n      wordBreak: 'break-all'\n    },\n    [CoinTxt]: {\n      flex: 1\n    }\n  }\n})\n\nfunction Sponsers({ sponsors }: { sponsors: Sponsor[] }) {\n  return (\n    <SponserCtr>\n      {sponsors.map((sponsor: any, idx: number) => (\n        <BarCtr key={idx}>\n          <SponsorTitle>\n            <Address>{sponsor.who}</Address>\n            <CoinTxt>\n              +{Number(web3.utils.fromWei(sponsor.amount))}{' '}\n              {process.env.REACT_APP_COIN}\n            </CoinTxt>\n          </SponsorTitle>\n          <div>\n            <Comment>{sponsor.comment}</Comment>\n          </div>\n        </BarCtr>\n      ))}\n    </SponserCtr>\n  )\n}\n\nexport default Sponsers\n","import Contract from 'web3/eth/contract'\nimport { Sponsor, ChallengeType } from '@Src/typing/globalTypes'\nimport { parseChallenge } from '@Utils/contractUtils'\nimport web3 from 'web3'\nimport { number } from 'prop-types'\n//process.env.REACT_APP_CONTRACT_ADDRESS\n\ninterface GetGroupProp {\n  contract: Contract\n  groupId: string\n  minAmount: number\n}\n\nexport const getChallengeGroup = async (props: GetGroupProp) => {\n  const { contract, groupId } = props\n  const res = await contract.methods.getChallengeGroup(groupId).call()\n  return {\n    name: res._name,\n    url: res._url,\n    minAmount: Number(web3.utils.fromWei(res._minAmount))\n  }\n}\n\ninterface GetChallengeProp {\n  contract: Contract\n  groupId: string\n  challenger: string\n}\n\ninterface GetChallengeEvevntProp {\n  contract: Contract\n  filter?: {\n    challenger?: string\n  }\n  callback?: Function\n}\n\nexport const newChallengesEvents = async ({\n  contract,\n  filter,\n  callback\n}: GetChallengeEvevntProp) => {\n  await contract.events.NewChallenge(\n    {\n      filter,\n      fromBlock: 0\n    },\n    function(_error: any, event: any) {\n      const {\n        challenger,\n        groupId,\n        targetDays,\n        totalDays,\n        startTimestamp,\n        amount\n      } = event.returnValues\n      callback &&\n        callback({\n          proposer: challenger,\n          groupId,\n          targetDays,\n          totalDays,\n          startTimestamp,\n          amount\n        })\n    }\n  )\n}\n\nexport const getPastChallenges = async ({\n  contract,\n  groupId,\n  challenger\n}: GetChallengeProp) => {\n  const finishChallenges =\n    (await getAllPastEvents(contract, 'FinishChallenge', {\n      fromBlock: 0,\n      filter: { groupId, challenger }\n    })) || []\n\n  const data: Array<ChallengeType> = []\n\n  for (let i = 0; i < finishChallenges.length; i++) {\n    const { returnValues } = finishChallenges[i]\n    data.push({\n      round: returnValues.round,\n      targetDays: returnValues.targetDays,\n      totalDays: returnValues.totalDays,\n      completeDays: returnValues.completeDays,\n      startTimestamp: returnValues.startTimestamp,\n      sponserSize: 0,\n      amount: returnValues.amount,\n      totalSponsorAmount: returnValues.totalSponsorAmount,\n      status: returnValues.status,\n      goal: returnValues.goal\n    })\n  }\n\n  return data\n}\n\nexport const getNewChallengeGroup = async (contract: Contract) => {\n  await contract.events.NewChallengeGroup(\n    {\n      fromBlock: 0\n    },\n    function(_error: any, event: any) {\n      console.log('event,', event)\n    }\n  )\n}\n\ninterface PastEventProp {\n  fromBlock: number\n  toBlock?: number | 'latest'\n  filter?: object\n}\n\nexport const getAllPastEvents = async (\n  contract: Contract | null,\n  event: string = 'allEvents',\n  options?: PastEventProp\n) => {\n  options = options || { fromBlock: 0 }\n  if (!contract) {\n    return\n  }\n  return await contract.getPastEvents(event, options)\n}\n\nexport const getPastSponsor = async (\n  contract: Contract | null,\n  round: number,\n  groupId: string,\n  challenger: string,\n  sponserSize: number = 0,\n  options?: PastEventProp\n) => {\n  options = options || { fromBlock: 0 }\n  //SponsorChallenge\n\n  let response = {\n    data: [] as Sponsor[]\n  }\n  let data: any[] = []\n  let sponsers: any[] = []\n\n  if (contract) {\n    let sponsor: any | undefined\n    let i = 0\n    while (i === 0 || sponsor._who) {\n      try {\n        sponsor = await contract.methods\n          .getSponsor(groupId, challenger, round, i)\n          .call()\n\n        sponsers.push({\n          who: sponsor._who,\n          amount: sponsor._amount,\n          comment: sponsor._comment\n        })\n      } catch (error) {\n        sponsor = {}\n      }\n      i++\n    }\n  }\n\n  if (!sponsers.length) {\n    return response\n  }\n\n  sponserSize = sponserSize || sponsers.length\n  // data = sponsers.slice(sponserSize * -1).reverse()\n\n  response.data = sponsers || []\n\n  return response\n}\n\ninterface SponsorEventProp {\n  contract: Contract\n  challenger: string\n  fromBlock?: number\n  callback?: (sponser: Sponsor) => void\n}\n\nexport const sponsorEvents = async ({\n  contract,\n  challenger,\n  callback\n}: SponsorEventProp) => {\n  contract.events\n    .SponsorChallenge({\n      filter: { challenger }\n    })\n    .on('data', function(event) {\n      if (callback) {\n        const { amount, comment, sponsor } = event.returnValues\n        callback({\n          amount,\n          comment,\n          who: sponsor\n        })\n      }\n    })\n}\n\ninterface GetChallengeServerProp {\n  contract: Contract\n  groupId: string\n  challenger: string\n  round?: number\n}\nexport const getChallenge = async ({\n  contract,\n  groupId,\n  challenger,\n  round\n}: GetChallengeServerProp) => {\n  const method = round && round > 0 ? 'getChallenge' : 'getCurrentChallenge'\n  const params =\n    method === 'getChallenge'\n      ? [groupId, challenger, round]\n      : [groupId, challenger]\n  const response = await contract.methods[method](...params).call()\n  return parseChallenge(response)\n}\n\n// interface GetSponsorProp {\n//   contract: Contract\n//   groupId: string\n//   address: string\n//   sponsorSize: number\n// }\n\n// export const getChellengeSponsors = async ({\n//   contract,\n//   groupId,\n//   address,\n//   sponsorSize\n// }: GetSponsorProp) => {\n//   let sponsors: Sponsor[] = []\n//   for (let i = 0; i < sponsorSize; i++) {\n//     const sponsor = await contract.methods\n//       .getSponsor(groupId, address, i)\n//       .call()\n//     sponsors.push({\n//       who: sponsor._who,\n//       amount: sponsor._amount,\n//       comment: sponsor._comment\n//     })\n//   }\n//   return sponsors\n// }\n\ninterface SponsorProp {\n  contract: Contract\n  groupId: string\n  address: string\n  from: string\n  amount: number\n  comment: string\n}\n\nexport const sponsorChallenge = async ({\n  contract,\n  groupId,\n  address,\n  from,\n  amount,\n  comment\n}: SponsorProp) => {\n  await contract.methods\n    .sponsorChallenge(groupId, address, comment)\n    .send({\n      from,\n      value: amount\n    })\n    .on('error', (err: any) => {\n      console.log('sponer error')\n      console.log(err)\n    })\n    .then((res: any) => {\n      console.log('sponser success')\n      console.log(res)\n    })\n}\n\n// contract.getPastEvents('allEvents', {fromBlock: 0}, function(error, events){ console.log(events); })\n\n// web3.eth.sendTransaction({\n//   from: '0xE13acF256C86292d0f808eA58B8afFE162927a3D',\n//   to: '0xCB4b9C9292410007D6FB7a7C061666B298f06ee2',\n//   value: 2000000000000000000\n// })\n","import React from 'react'\nimport { APP_LIGHT_BG, APP_THEME } from '@Src/contants/themeColor'\nimport { breakPoint } from '@Src/contants/common'\nimport styled from 'styled-components'\n\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport Contract from 'web3/eth/contract'\nimport { getPastChallenges } from '@Src/contracts/contractService'\nimport { ChallengeType } from '@Src/typing/globalTypes'\nimport { formatNumber } from '@Src/utils'\nimport web3 from 'web3'\nimport moment from 'moment'\n\nconst STATUS = ['Succeeded', 'Failed', 'Aborted']\nconst STATUS_COLOR = [\n  'rgba(0, 0, 0, 0.6)',\n  'rgba(0, 0, 0, 0.6)',\n  'rgba(0, 0, 0, 0.6)'\n]\n\ninterface HistoryProp extends InjectedIntlProps {\n  contract: Contract | null\n  challenger: string\n  groupId: string\n}\n\ninterface HistoryState {\n  challenges: Array<ChallengeType>\n}\n\nconst Title = styled('div')({\n  fontSize: 30,\n  color: 'rgba(0, 0, 0, 0.8)',\n  textAlign: 'center',\n  margin: '20px 0 10px',\n  paddingBottom: '10px',\n  borderBottom: `3px solid ${APP_THEME}`\n})\n\nconst TimelineCtr = styled('div')({\n  background: APP_LIGHT_BG,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n})\n\nconst HistoryCtr = styled('div')({\n  width: 'calc(80% - 20px)',\n  minWidth: '558px',\n  display: 'flex',\n  margin: '10px 0',\n  justifyContent: 'space-between',\n  color: 'rgba(0, 0, 0, 0.6)',\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%',\n    minWidth: 0,\n    padding: '0 10px'\n  }\n})\n\nconst Amount = styled('span')({\n  color: 'rgba(0, 0, 0, 0.8)',\n  lineHeight: '20px',\n  fontWeight: 600\n})\n\nconst ResultText = styled('div')({\n  fontSize: '18px',\n  fontWeight: 600\n})\n\nclass HistoryTimeline extends React.PureComponent<HistoryProp, HistoryState> {\n  private fetched: boolean = false\n  public state = {\n    challenges: []\n  }\n  public async componentDidUpdate() {\n    const { contract, groupId, challenger } = this.props\n    if (contract && !this.fetched) {\n      const pastChallengs = await getPastChallenges({\n        contract,\n        groupId,\n        challenger\n      })\n      this.fetched = true\n      this.setState({\n        challenges: pastChallengs\n      })\n    }\n  }\n  public render() {\n    const { intl } = this.props\n    const { challenges } = this.state\n    if (!challenges.length) {\n      return null\n    }\n    return (\n      <TimelineCtr>\n        <Title>\n          {challenges.length\n            ? intl.formatMessage({\n                id: 'history'\n              })\n            : null}\n        </Title>\n        {challenges.map((challenge: ChallengeType, idx: number) => {\n          const status = challenge.status || 0\n          return (\n            <HistoryCtr key={`history-${idx}`}>\n              <div>\n                {moment(challenge.startTimestamp * 1000).format(\n                  intl.formatMessage({ id: 'challenge.history.date.formate' })\n                )}\n                <br />\n                <Amount>\n                  {Number(\n                    formatNumber(Number(web3.utils.fromWei(challenge.amount)))\n                  )}{' '}\n                  {process.env.REACT_APP_COIN}\n                </Amount>\n              </div>\n              <ResultText style={{ color: STATUS_COLOR[status] }}>\n                {intl.formatMessage({\n                  id: 'status.' + STATUS[status]\n                })}\n              </ResultText>\n            </HistoryCtr>\n          )\n        })}\n      </TimelineCtr>\n    )\n  }\n}\n\nexport default injectIntl(HistoryTimeline)\n","import React, { ReactNode } from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport styled from 'styled-components'\nimport Contract from 'web3/eth/contract'\nimport { newChallengesEvents } from '@Src/contracts/contractService'\nimport { ChallengeType } from '@Src/typing/globalTypes'\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\nimport web3 from 'web3'\ninterface MessageProp {\n  key: number\n  message: ReactNode\n}\n\ninterface NotifierState {\n  open: boolean\n  messageInfo: MessageProp | {}\n}\n\ninterface ChallengeEvent extends ChallengeType {\n  proposer: string\n}\n\nconst StyledTxt = styled('span')({\n  color: '#e10050'\n})\n\nconst style = {\n  message: {\n    maxWidth: '85%'\n  }\n}\n\nconst { REACT_APP_COIN } = process.env\n\nclass Notifier extends React.Component<\n  { contract: Contract | null } & WithStyles,\n  NotifierState\n> {\n  private queue: Array<MessageProp> = []\n  private registered: boolean = false\n\n  public state = {\n    open: false,\n    messageInfo: {\n      key: Math.random(),\n      message: ''\n    }\n  }\n\n  private processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift() as MessageProp,\n        open: true\n      })\n    }\n  }\n\n  private handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  private handleExited = () => {\n    this.processQueue()\n  }\n\n  private insertEvent = (props: ChallengeEvent) => {\n    const { proposer, amount } = props\n    this.queue.push({\n      key: Math.random(),\n      message: (\n        <span>\n          {proposer} has created a challenge with{' '}\n          <StyledTxt>{Number(web3.utils.fromWei(amount))}</StyledTxt>\n          {REACT_APP_COIN}\n        </span>\n      )\n    })\n    this.processQueue()\n  }\n\n  public componentDidUpdate() {\n    const { contract } = this.props\n    if (contract && !this.registered) {\n      this.registered = true\n      newChallengesEvents({\n        contract,\n        callback: this.insertEvent\n      })\n    }\n  }\n\n  public render() {\n    const { messageInfo } = this.state\n    const { classes } = this.props\n\n    return (\n      <Snackbar\n        key={messageInfo.key}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={this.state.open}\n        autoHideDuration={2000}\n        onClose={this.handleClose}\n        onExited={this.handleExited}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n          classes\n        }}\n        message={messageInfo.message}\n        action={[\n          <IconButton\n            key='close'\n            aria-label='Close'\n            color='inherit'\n            onClick={this.handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    )\n  }\n}\n\nexport default withStyles(style)(Notifier)\n","import { ChallengeType } from '@Src/typing/globalTypes'\nimport { Sponsor } from '@Src/typing/globalTypes'\nimport { Dispatch } from 'redux'\n\ninterface GetChallengeProp {\n  groupId: string\n  challenger: string\n  round?: number\n}\n\nexport interface SetGroupProp {\n  groupName: string\n  groupImage: string\n  minAmount: number\n}\n\nexport interface SetSponserProp {\n  sponsors: Array<Sponsor>\n}\n\nexport interface SponserProp {\n  groupId: string\n  who: string\n  comment: string\n  amount: number\n  dispatch?: Dispatch\n}\n\nexport interface SetConfirmSponsor {\n  isCofirmingSponsor: boolean\n  txhash: string\n}\n\nexport const GET_CAHLLENGE = '@CAHLLENGE/GET_CAHLLENGE'\nexport const SET_CAHLLENGE = '@CAHLLENGE/SET_CAHLLENGE'\nexport const SET_CAHLLENGE_GROUP = '@CAHLLENGE/SET_CAHLLENGE_GROUP'\nexport const SET_CAHLLENGE_SPONSERS = '@CAHLLENGE/SET_CAHLLENGE_SPONSERS'\nexport const SPONSER_CHALLENGE = '@CAHLLENGE/SPONSER_CHALLENGE'\nexport const SET_COFIRM_SPONSOR = '@CAHLLENGE/SET_COFIRM_SPONSOR'\n\nexport const sponserChallenge = (payload: SponserProp) => ({\n  type: SPONSER_CHALLENGE,\n  payload\n})\n\nexport const setChallengeGroup = (payload: SetGroupProp) => ({\n  type: SET_CAHLLENGE_GROUP,\n  payload\n})\n\nexport const getChallenge = (payload: GetChallengeProp) => ({\n  type: GET_CAHLLENGE,\n  payload\n})\n\nexport const setChallenge = (payload: ChallengeType) => ({\n  type: SET_CAHLLENGE,\n  payload\n})\n\nexport const setChallengeSponsers = (payload: SetSponserProp) => ({\n  type: SET_CAHLLENGE_SPONSERS,\n  payload\n})\n\nexport const setConfirmSponsor = (payload: SetConfirmSponsor) => ({\n  type: SET_COFIRM_SPONSOR,\n  payload\n})\n","import React from 'react'\nimport { addLocaleData, IntlProvider } from 'react-intl'\nimport localeEn from 'react-intl/locale-data/en'\nimport localeZh from 'react-intl/locale-data/zh'\n\nimport messageEN_US from './en.json'\nimport messageZH_TW from './zh-TW.json'\nimport messageZH_CN from './zh-CN.json'\n\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parseLangPath } from '@Utils/index'\nimport Cookies from 'js-cookie'\n\naddLocaleData([...localeEn, ...localeZh])\n\ntype Message = {\n  en: string\n  'zh-TW': string\n  'zh-CN': string\n}\n\ntype MessagesProp = { [k in keyof Message]: any }\n\nconst messgaes = {\n  en: messageEN_US,\n  'zh-TW': messageZH_TW,\n  'zh-CN': messageZH_CN\n} as MessagesProp\n\nlet currentLang = 'en'\n\nexport const getLang = () => currentLang\n\nexport default function(WrappedComponent: React.ComponentClass) {\n  return class MutilLang extends React.Component<\n    RouteComponentProps,\n    { lang: string }\n  > {\n    public constructor(props: RouteComponentProps) {\n      super(props)\n      this.state = {\n        lang: parseLangPath(this.props.location.search)\n      }\n    }\n\n    public componentDidMount() {\n      const { history } = this.props\n      history.listen(location => {\n        const urlParams = new URLSearchParams(location.search)\n        const nextLang = urlParams.get('l')\n        if (nextLang && nextLang.length && nextLang !== this.state.lang) {\n          Cookies.set('_coin_lng_', nextLang)\n          this.setState({\n            lang: nextLang\n          })\n        }\n      })\n    }\n\n    public render() {\n      const { lang } = this.state\n      currentLang = lang\n      const locale = lang.indexOf('en') > -1 ? 'en' : 'zh'\n      return (\n        <IntlProvider locale={locale} messages={messgaes[lang]}>\n          <WrappedComponent />\n        </IntlProvider>\n      )\n    }\n  }\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet'\nimport ChallengeCard from './components/ChallengeCard'\nimport ChallengeInfo from './components/ChallengeInfo'\nimport SponsorButton from './components/SponsorButton'\nimport Sponsers from './components/Sponsers'\nimport { ChallengeStateType } from '@Reducers/challengeReducer'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport HistoryTimeline from './components/HistoryTimeline'\nimport Notifier from './components/Notifier'\nimport { breakPoint, hostUrl } from '@Src/contants/common'\n\nimport Contract from 'web3/eth/contract'\nimport {\n  checkWallet,\n  setPopup,\n  SetPopProps,\n  initContract\n} from '@Epics/commonEpic/action'\nimport {\n  getChallenge,\n  sponserChallenge,\n  SponserProp\n} from '@Epics/challengeEpic/action'\nimport { ChallengeType, Sponsor } from '@Src/typing/globalTypes'\n\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport Transaction from '@Components/Transaction'\nimport { changeRoute } from '@Utils/index'\nimport web3 from 'web3'\n\nimport { getLang } from '@Src/translation'\nimport { sponsorEvents, getPastSponsor } from '@Src/contracts/contractService'\nimport moment from 'moment'\n\nconst ChallengeContainer = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '30px',\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%',\n    overflow: 'hidden',\n    marginTop: 0\n  }\n})\n\nconst StyledGridList = styled('div')({\n  width: 800,\n  zIndex: 1,\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%'\n  }\n})\n\nconst LoadingBlk = styled('div')({\n  maxWidth: '400px',\n  margin: '0 auto',\n  textAlign: 'center',\n  a: {\n    display: 'inline-block',\n    marginBottom: '10px'\n  }\n})\n\ninterface ChallengeProp\n  extends RouteComponentProps,\n    ChallengeType,\n    InjectedIntlProps {\n  txContract: Contract | null\n  contract: Contract | null\n  account: string | null\n  error: boolean\n  isCofirmingSponsor: boolean\n  txhash: string\n  groupName: string\n  groupImage: string\n  minAmount: number\n  startTimestamp: number\n  fetchChallenge: (data: RouteParams) => void\n  sponserChallenge: (payload: SponserProp) => void\n  setChallengeSponsersAction: (sponsors: Sponsor[]) => void\n  checkWallet: () => void\n  setPopup: (payload: SetPopProps) => void\n  initContract: () => void\n}\n\ninterface ChallengeState {\n  sponsors: Sponsor[]\n  sponsorAmount: number\n  invalidAddress: boolean\n}\nexport interface RouteParams {\n  address: string\n  groupId: string\n  round?: number\n}\n\nconst deeplinking = (data: RouteParams) => {\n  branch.deepview(\n    {\n      channel: 'safari',\n      feature: 'deepview',\n      $uri_redirect_mode: 2,\n      data: {\n        $deeplink_path: `group/${data.groupId}/${data.address}${\n          data.round ? `/${data.round}` : ''\n        }`,\n        user_cookie_id: 'coin-challenge',\n        ...data\n      }\n    },\n    {\n      open_app: true\n    }\n  )\n}\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  const challengeState = state.get('challenge') as ChallengeStateType\n  const commonState = state.get('common') as CommonStateType\n  return {\n    txContract: commonState.get('txContract'),\n    contract: commonState.get('contract'),\n    account: commonState.get('userAddress'),\n    ...challengeState.toJS()\n  }\n}\n\nconst mapDispathToProps = (dispatch: Dispatch) => ({\n  fetchChallenge: (data: RouteParams) =>\n    dispatch(\n      getChallenge({\n        groupId: data.groupId,\n        challenger: data.address,\n        round: data.round\n      })\n    ),\n  sponserChallenge: (payload: SponserProp) =>\n    dispatch(\n      sponserChallenge({\n        ...payload,\n        dispatch\n      })\n    ),\n  checkWallet: () => dispatch(checkWallet()),\n  setPopup: (payload: SetPopProps) => dispatch(setPopup(payload)),\n  initContract: () => dispatch(initContract())\n})\n\nconst { REACT_APP_COIN = 'ETH' } = process.env\nclass Challenge extends React.Component<ChallengeProp, ChallengeState> {\n  public address: string = ''\n  public groupId: string = ''\n  public round: number | undefined = undefined\n  public fetched: boolean = false\n  public sponsorFetched: boolean = false\n\n  constructor(props: ChallengeProp) {\n    super(props)\n    const params = this.props.match.params as RouteParams\n    this.address = params.address\n    this.groupId = params.groupId\n    this.round = params.round ? Number(params.round) : undefined\n    this.state = {\n      sponsors: [],\n      sponsorAmount: 0,\n      invalidAddress: false\n    }\n  }\n\n  private onNewSponsor = (sponsor: Sponsor) => {\n    const sponsors = this.state.sponsors\n    this.setState({\n      sponsors: sponsors.concat([sponsor]),\n      sponsorAmount:\n        this.state.sponsorAmount + Number(web3.utils.fromWei(sponsor.amount))\n    })\n  }\n\n  private async checkAndFetch() {\n    const {\n      contract,\n      fetchChallenge,\n      sponserSize,\n      targetDays,\n      setPopup,\n      round\n    } = this.props\n    const isValid = await web3.utils.isAddress(this.address)\n    if (!isValid && !this.fetched) {\n      setPopup({\n        showPop: true,\n        messageKey: 'invalidAddress'\n      })\n      this.setState({\n        invalidAddress: true\n      })\n      this.fetched = true\n      return\n    }\n\n    if (typeof window !== 'undefined' && isValid) {\n      deeplinking({\n        address: this.address,\n        groupId: this.groupId,\n        round: this.round\n      })\n    }\n\n    if (contract) {\n      if (!this.fetched) {\n        fetchChallenge({\n          address: this.address,\n          groupId: this.groupId,\n          round: this.round\n        })\n        this.fetched = true\n      } else if (!this.sponsorFetched && targetDays > 0) {\n        this.sponsorFetched = true\n        const sponsorData = await getPastSponsor(\n          contract,\n          round,\n          this.groupId,\n          this.address,\n          sponserSize\n        )\n        sponsorEvents({\n          contract,\n          challenger: this.address,\n          callback: this.onNewSponsor\n        })\n\n        this.setState({\n          sponsors: sponsorData.data,\n          sponsorAmount: sponsorData.data.reduce((accumulator, sponsor) => {\n            return accumulator + Number(web3.utils.fromWei(sponsor.amount))\n          }, 0)\n        })\n      }\n    }\n  }\n\n  private onSponsor = async ({\n    amount,\n    comment\n  }: {\n    amount: number\n    comment: string\n  }) => {\n    const { setPopup, checkWallet, minAmount, intl } = this.props\n    if (amount < minAmount) {\n      setPopup({\n        showPop: true,\n        popMessage: intl.formatMessage(\n          { id: 'min.amount.error' },\n          {\n            amount: minAmount + ' ' + REACT_APP_COIN\n          }\n        )\n      })\n    } else {\n      checkWallet()\n      const { txContract, account, sponserChallenge } = this.props\n      if (txContract && account) {\n        sponserChallenge({\n          groupId: this.groupId,\n          who: this.address,\n          amount,\n          comment\n        })\n      }\n    }\n  }\n\n  private canSponsor = () => {\n    const { completeDays, targetDays, totalDays, startTimestamp } = this.props\n    const diffDaysFromStart = moment().diff(moment(startTimestamp), 'd')\n    const failedDays = diffDaysFromStart - completeDays\n    return failedDays <= totalDays - targetDays\n  }\n\n  public componentDidUpdate() {\n    this.checkAndFetch()\n  }\n\n  public componentDidMount() {\n    const { history, location, initContract } = this.props\n    changeRoute({ history, location, match: {} })\n    initContract()\n    this.checkAndFetch()\n  }\n\n  public render() {\n    const {\n      completeDays,\n      totalDays,\n      targetDays,\n      amount,\n      goal,\n      intl,\n      isCofirmingSponsor,\n      txhash,\n      contract,\n      groupName,\n      groupImage\n    } = this.props\n\n    intl.locale\n\n    const goalText = intl.formatMessage(\n      { id: `group.unit.${this.groupId}`, defaultMessage: ' ' },\n      { goal }\n    )\n\n    const title =\n      intl.formatMessage({\n        id: `group.title.${this.groupId}`,\n        defaultMessage: 'CoinChallenges'\n      }) +\n      ' - ' +\n      goalText\n\n    const shareDesc = intl.formatMessage(\n      {\n        id: 'shareDesc'\n      },\n      { amount: `${amount} ${REACT_APP_COIN}`, totalDays }\n    )\n\n    return (\n      <React.Fragment>\n        <ChallengeContainer>\n          <Helmet>\n            <title>{title}</title>\n            <meta property='og:title' content={title} />\n            <meta property='og:description' content={shareDesc} />\n            <meta\n              property='og:image'\n              content={`${hostUrl()}share/${this.groupId}/${\n                this.address\n              }?l=${getLang()}`}\n            />\n            <meta property='og:site_name' content='CoinChallengs' />\n            <meta property='twitter:card' content='summary_large_image' />\n            <meta property='twitter:site' content='CoinChallengs' />\n            <meta property='twitter:creator' content='CoinChallengs' />\n            <meta property='twitter:image:alt' content={shareDesc} />\n          </Helmet>\n          <StyledGridList>\n            <ChallengeCard\n              name={groupName}\n              goal={totalDays ? goalText : ''}\n              url={groupImage}\n              invalidAddress={this.state.invalidAddress}\n            />\n            <ChallengeInfo\n              address={this.address}\n              completeDays={completeDays}\n              targetDays={targetDays}\n              totalDays={totalDays}\n              amount={amount}\n              invalidAddress={this.state.invalidAddress}\n            />\n            {totalDays && this.canSponsor() ? (\n              <SponsorButton onSponsor={this.onSponsor} intl={intl} />\n            ) : null}\n            {isCofirmingSponsor ? (\n              <LoadingBlk>\n                <Transaction txHash={txhash} />\n              </LoadingBlk>\n            ) : null}\n            <Sponsers sponsors={this.state.sponsors} />\n            <HistoryTimeline\n              contract={contract}\n              groupId={this.groupId}\n              challenger={this.address}\n            />\n          </StyledGridList>\n        </ChallengeContainer>\n        <Notifier contract={contract} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(injectIntl(Challenge))\n","import React, { Component } from 'react'\nimport { Route, Switch, Redirect, Link, withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Home from '@Container/Home'\nimport Landing from '@Components/Landing'\nimport CreateChallengeGroup from '@Container/CreateChallengeGroup'\nimport Challenge from '@Container/Challenge'\n\nimport TranslateHoc from '@Src/translation'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { withTheme } from '@material-ui/core/styles'\nimport { APP_FONT_COLOR, APP_THEME } from '@Src/contants/themeColor'\nimport { breakPoint } from '@Src/contants/common'\nimport 'reset-css'\nimport './app.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: APP_THEME,\n      light: APP_THEME,\n      dark: APP_THEME\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n\nconst Body = styled('div')({\n  fontFamily: '-apple-system, BlinkMacSystemFont, sans-serif',\n  background: APP_FONT_COLOR,\n  minHeight: '100vh'\n})\n\nconst MainContainer = styled('div')({\n  margin: '0 auto 40px',\n  paddingTop: 60,\n  [`@media (max-width: ${breakPoint})`]: {\n    paddingTop: 50\n  }\n})\n\nclass App extends Component {\n  public componentDidMount() {\n    const jssStyles = document.getElementById('jss-ssr')\n    jssStyles && jssStyles.remove()\n  }\n  public render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Body>\n          <MainContainer>\n            <Home />\n            <Switch>\n              <Route path='/' exact component={Landing} />\n              <Route\n                path='/group/create'\n                exact\n                component={CreateChallengeGroup}\n              />\n              <Route\n                path='/challenge/:groupId/:address/:round?'\n                component={Challenge}\n              />\n              <Route component={() => <Redirect to='/' />} />\n            </Switch>\n          </MainContainer>\n        </Body>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withTheme()(withRouter(TranslateHoc(App)))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from '@Src/typing/globalTypes'\nimport {\n  SET_CAHLLENGE_GROUP,\n  SET_CAHLLENGE,\n  SET_CAHLLENGE_SPONSERS,\n  SET_COFIRM_SPONSOR,\n  SetGroupProp,\n  SetConfirmSponsor,\n  SetSponserProp\n} from '@Epics/challengeEpic/action'\nimport { ChallengeType, Sponsor } from '@Src/typing/globalTypes'\nimport { Record, RecordOf } from 'immutable'\n\nexport type ChallengeState = {\n  sponsers: Array<Sponsor>\n  isCofirmingSponsor: boolean\n  txhash: string\n  groupName: string\n  groupImage: string\n  minAmount: number\n} & ChallengeType\n\nexport type ChallengeStateType = RecordOf<ChallengeState>\nlet initState\nif (typeof window !== 'undefined' && window.__PRELOADED_STATE__) {\n  initState = window.__PRELOADED_STATE__.challenge\n} else {\n  initState = {\n    round: 0,\n    completeDays: 0,\n    targetDays: 0,\n    totalDays: 0,\n    startTimestamp: 0,\n    sponserSize: 0,\n    amount: 0,\n    totalSponsorAmount: 0,\n    goal: '',\n    minAmount: 0\n  } as ChallengeType\n}\n\nconst stateMaker = Record<ChallengeState>({\n  sponsers: [],\n  isCofirmingSponsor: false,\n  txhash: '',\n  groupName: '',\n  groupImage: '',\n  ...initState\n})\n\nexport const initialState = stateMaker()\n\nconst challengeReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CAHLLENGE:\n      return state.merge({\n        ...action.payload\n      })\n\n    case SET_CAHLLENGE_SPONSERS:\n      const payload = action.payload as SetSponserProp\n      return state.set('sponsers', payload.sponsors)\n\n    case SET_COFIRM_SPONSOR:\n      const { isCofirmingSponsor, txhash } = action.payload as SetConfirmSponsor\n      return state.merge({\n        isCofirmingSponsor,\n        txhash\n      })\n    case SET_CAHLLENGE_GROUP:\n      const {\n        groupName,\n        groupImage,\n        minAmount\n      } = action.payload as SetGroupProp\n      return state.merge({\n        groupName,\n        groupImage,\n        minAmount\n      })\n    default:\n      return state\n  }\n}\n\nexport default challengeReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport {\n  SET_CONTRACT,\n  SET_POPUP,\n  CHECK_WALLET,\n  SET_CONFIRM,\n  SetPopProps\n} from '@Epics/commonEpic/action'\nimport { GET_CAHLLENGE, SET_CAHLLENGE } from '@Epics/challengeEpic/action'\nimport {\n  CREATE_CHALLENGE_GROUP,\n  SET_CREATE_RESULT\n} from '@Epics/challengeGroupEpic/action'\nimport Contract from 'web3/eth/contract'\nimport { getMetmaskUrl } from '@Src/utils'\nimport { Record, RecordOf } from 'immutable'\n\nexport type CommonState = {\n  lang: string\n  userAddress: string | null\n  txContract: Contract | null\n  contract: Contract | null\n  accounts: Array<string>\n  loading: boolean\n  showPop: boolean\n  popMessage: string\n  messageKey: string | null\n  isConfirming: boolean\n  txHash?: string\n  accountBalance: string\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport type CommonStateType = RecordOf<CommonState>\n\nconst stateMaker = Record<CommonState>({\n  lang: 'en',\n  userAddress: null,\n  accounts: [],\n  txContract: null,\n  contract: null,\n  loading: true,\n  showPop: false,\n  popMessage: '',\n  messageKey: null,\n  isConfirming: false,\n  txHash: '',\n  error: null,\n  accountBalance: '0'\n})\n\ninterface SetContractPayload {\n  txContract: Contract | null\n  contract: Contract | null\n  userAddress: string | null\n  accounts: Array<string>\n  loading: boolean\n  accountBalance: string\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport const initialState = stateMaker()\n\nconst commonReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CONTRACT:\n      const {\n        txContract,\n        contract,\n        userAddress,\n        accounts = [],\n        accountBalance,\n        error\n      } = action.payload as SetContractPayload\n      return state.merge({\n        txContract,\n        contract,\n        userAddress,\n        accounts,\n        accountBalance,\n        loading: false,\n        error\n      })\n\n    case SET_POPUP:\n      const payload = action.payload as SetPopProps\n      return state.merge({\n        showPop: payload.showPop,\n        popMessage: payload.popMessage,\n        messageKey: payload.messageKey\n      })\n\n    case GET_CAHLLENGE:\n    case CREATE_CHALLENGE_GROUP:\n      return state.set('loading', true)\n    case SET_CAHLLENGE:\n    case SET_CREATE_RESULT:\n      return state.merge({\n        loading: false,\n        isConfirming: false\n      })\n    case CHECK_WALLET:\n      if (state.get('txContract') === null) {\n        const url = getMetmaskUrl()\n        if (state.get('accounts').length === 0) {\n          return state.merge({\n            showPop: true,\n            messageKey: 'accountNotFound'\n          })\n        }\n\n        if (url) {\n          window.open(url)\n        } else {\n          state = state.merge({\n            showPop: true,\n            messageKey: 'browserNotSupport'\n          })\n        }\n      }\n\n      return state\n    case SET_CONFIRM:\n      const { isConfirming, txHash } = action.payload as any\n      return state.merge({\n        isConfirming,\n        txHash\n      })\n    default:\n      return state\n  }\n}\n\nexport default commonReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport { SET_CREATE_RESULT } from '@Epics/challengeGroupEpic/action'\nimport { Record, RecordOf } from 'immutable'\n\nexport type ChallengeGroupState = {\n  response: {\n    status?: number\n    gasUsed?: number\n  }\n  error: boolean\n}\n\nexport type ChallengeGroupStateType = RecordOf<ChallengeGroupState>\n\nconst stateMaker = Record<ChallengeGroupState>({\n  response: {},\n  error: false\n})\n\nexport const initialState = stateMaker()\n\nconst challengeGroupReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CREATE_RESULT:\n      const { response, error } = action.payload as ChallengeGroupState\n      return state.merge({\n        response,\n        error\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default challengeGroupReducer\n","import { combineReducers } from 'redux-immutable'\nimport { Reducer } from 'redux'\nimport commonReducer from './commonReducer'\nimport challengeGroupReducer from './challengeGroupReducer'\nimport challengeReducer from './challengeReducer'\n\nconst rootReducer: Reducer = combineReducers({\n  common: commonReducer,\n  challengeGroup: challengeGroupReducer,\n  challenge: challengeReducer\n})\n\nexport default rootReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport { CREATE_CHALLENGE_GROUP, setCreateResult } from './action'\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport {\n  switchMap,\n  mergeMap,\n  catchError,\n  filter,\n  take,\n  repeat\n} from 'rxjs/operators'\nimport { from, of } from 'rxjs'\n\nimport { setPopup, setConfirm } from '../commonEpic/action'\n\nfunction parseErrorMsg(err: string) {\n  if (err.indexOf('invalid addres') > -1) {\n    return 'invalidAddress'\n  } else if (err.indexOf('connection not open') > -1) {\n    return 'connectNotOpen'\n  } else if (err.indexOf('User denied') > -1) {\n    return 'userDenied'\n  }\n  return 'createGroupError'\n}\n\nexport const newChallengeGroupEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(CREATE_CHALLENGE_GROUP),\n    take(1),\n    filter(() => state$.value.get('common').get('txContract') !== null),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const payload = { ...action.payload } as any\n      const [contract, address] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('userAddress')\n      ]\n\n      const dispatch = payload.dispatch\n      delete payload.dispatch\n\n      payload.minAmount = web3.utils.toWei(payload.minAmount, 'ether')\n      payload.agent =\n        payload.agent === ''\n          ? '0xa99CeB4475670cCDF31a78232bfA585848598cBA'\n          : payload.agent\n\n      return from(\n        contract.methods\n          .createChallengeGroup(...Object.values(payload))\n          .send({ from: address }, (_err: any, hash: string) => {\n            dispatch(\n              setConfirm({\n                isConfirming: true,\n                txHash: hash\n              })\n            )\n          })\n      ).pipe(\n        mergeMap((response: any) => {\n          return of(\n            setCreateResult({\n              response: {\n                status: response.status,\n                gasUsed: response.gasUsed\n              },\n              error: false\n            }),\n            setPopup({\n              showPop: true,\n              messageKey: 'createSuccess'\n            })\n          )\n        }),\n        catchError((err: Error) => {\n          return of(\n            setPopup({\n              showPop: true,\n              messageKey: parseErrorMsg(err.message)\n            }),\n            setCreateResult({\n              response: {},\n              error: true\n            })\n          )\n        })\n      )\n    }),\n    repeat()\n  )\n\nexport default [newChallengeGroupEpic]\n","import {\n  GET_CAHLLENGE,\n  SPONSER_CHALLENGE,\n  SponserProp,\n  setChallengeGroup,\n  setChallenge,\n  setConfirmSponsor\n} from './action'\nimport { Action } from '@Src/typing/globalTypes'\n\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport {\n  map,\n  switchMap,\n  catchError,\n  filter,\n  take,\n  repeat,\n  mergeMap\n} from 'rxjs/operators'\nimport { from, of } from 'rxjs'\nimport { setPopup } from '../commonEpic/action'\nimport { parseChallenge } from '@Utils/contractUtils'\nimport web3 from 'web3'\n\nexport const getChallengeGroupEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(GET_CAHLLENGE),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const [contract] = [commonReducer.get('contract')]\n      const { groupId } = action.payload as any\n\n      return from(contract.methods.getChallengeGroup(groupId).call()).pipe(\n        map((response: any) => {\n          return setChallengeGroup({\n            groupName: response._name,\n            groupImage: response._url,\n            minAmount: Number(web3.utils.fromWei(response._minAmount))\n          })\n        }),\n        catchError((err: any) => {\n          return of(\n            setPopup({ showPop: true, messageKey: 'challengeGroup.error' })\n          )\n        })\n      )\n    })\n  )\n\nexport const getChallengeEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(GET_CAHLLENGE),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const [contract] = [commonReducer.get('contract')]\n      const { groupId, challenger, round } = action.payload as any\n\n      const method = isNaN(round) ? 'getCurrentChallenge' : 'getChallenge'\n      const params = isNaN(round)\n        ? [groupId, challenger]\n        : [groupId, challenger, round]\n\n      return from(contract.methods[method](...params).call()).pipe(\n        map((response: any) => {\n          const challenge = parseChallenge(response)\n          return challenge.totalDays\n            ? setChallenge(challenge)\n            : setPopup({ showPop: true, messageKey: 'challenge.error' })\n        }),\n        catchError((_err: any) => {\n          return of(\n            setPopup({\n              showPop: true,\n              messageKey: 'challenge.error'\n            })\n          )\n        })\n      )\n    })\n  )\n\nexport const sponsorChallengeEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(SPONSER_CHALLENGE),\n    filter(() => state$.value.get('common').get('txContract') !== null),\n    take(1),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const payload = action.payload as SponserProp\n      const { groupId, who, comment, amount, dispatch } = payload\n      const [contract, address] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('userAddress')\n      ]\n\n      return from(\n        contract.methods.sponsorChallenge(groupId, who, comment).send(\n          {\n            from: address,\n            value: web3.utils.toWei(String(amount), 'ether')\n          },\n          (_err: any, hash: string) => {\n            dispatch &&\n              dispatch(\n                setConfirmSponsor({\n                  isCofirmingSponsor: true,\n                  txhash: hash\n                })\n              )\n          }\n        )\n      ).pipe(\n        mergeMap(() =>\n          of(\n            // setPopup({ showPop: true, messageKey: 'donateSuccess' }),\n            setConfirmSponsor({ isCofirmingSponsor: false, txhash: '' })\n          )\n        ),\n        catchError((err: Error) => {\n          return of(\n            // setPopup({ showPop: true, popMessage: err.message }),\n            setConfirmSponsor({ isCofirmingSponsor: false, txhash: '' })\n          )\n        })\n      )\n    }),\n    repeat()\n  )\n\nexport default [getChallengeGroupEpic, getChallengeEpic, sponsorChallengeEpic]\n","import { combineEpics } from 'redux-observable'\nimport commonEpics from './commonEpic'\nimport challengeGroupEpics from './challengeGroupEpic'\nimport challengeEpics from './challengeEpic'\n\nexport default combineEpics(\n  ...commonEpics,\n  ...challengeGroupEpics,\n  ...challengeEpics\n)\n","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducer'\n\nimport { createEpicMiddleware } from 'redux-observable'\nimport rootEpic from '../epics'\n\nconst epicMiddleware = createEpicMiddleware()\nlet middlewares: Array<any> = [epicMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ stateTransformer: state => state.toJS() }))\n}\n\nlet store = createStore(rootReducer, applyMiddleware(...middlewares))\nepicMiddleware.run(rootEpic)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from '@Src/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.hydrate(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import Contract from 'web3/eth/contract'\n\nexport const INIT_CONTRACT = '@COMMON/INIT_CONTRACT'\nexport const SET_CONTRACT = '@COMMON/SET_CONTRACT'\n\nexport const SET_POPUP = '@COMMON/SET_POPUP'\nexport const CHECK_WALLET = '@COMMON/CHECK_WALLET'\n\nexport const SET_CONFIRM = '@COMMON/SET_CONFIRM'\n\nexport const GET_BALANCE = '@COMMON/GET_BALANCE'\nexport const SET_BALANCE = '@COMMON/SET_BALANCE'\n\nexport const WITHDRAW_BALANCE = '@COMMON/WITHDRAW_BALANCE'\nexport const SET_WITHRAW_RESULT = '@COMMON/SET_WITHRAW_RESULT'\n\nexport const initContract = () => ({ type: INIT_CONTRACT })\n\nexport const setContract = (payload: {\n  txContract: Contract | null\n  contract: Contract | null\n  userAddress: string | null\n  accounts?: Array<string>\n  accountBalance: string\n  error: object | null\n}) => ({\n  type: SET_CONTRACT,\n  payload\n})\n\nexport interface SetPopProps {\n  popMessage?: string\n  messageKey?: string\n  showPop: boolean\n}\n\nexport const setPopup = (payload: SetPopProps) => ({\n  type: SET_POPUP,\n  payload: {\n    popMessage: payload.popMessage || '',\n    messageKey: payload.messageKey || null,\n    showPop: payload.showPop\n  }\n})\n\nexport const checkWallet = () => ({ type: CHECK_WALLET })\n\nexport interface SetConfirmProp {\n  isConfirming: boolean\n  txHash?: string\n}\n\nexport const setConfirm = (payload: SetConfirmProp) => ({\n  type: SET_CONFIRM,\n  payload\n})\n\nexport const getBalance = () => ({\n  type: GET_BALANCE\n})\n\nexport const setBalance = (balance: string) => ({\n  type: SET_BALANCE,\n  payload: {\n    balance\n  }\n})\n\nexport const withdrawBalance = () => ({\n  type: WITHDRAW_BALANCE\n})\n"],"sourceRoot":""}