{"version":3,"sources":["epics/commonEpic/action.ts","images/logo.png","container/Home/Home.tsx","contants/themeColor.ts","contants/common.ts","epics/commonEpic/commonEpic.ts","contants/errorCode.ts","components/Header/Header.tsx","components/Header/index.tsx","utils/index.ts","utils/contractUtils.ts","epics/challengeGroupEpic/action.ts","components/Transaction/Transaction.tsx","container/CreateChallengeGroup/CreateChallengeGroup.tsx","container/Challenge/components/ChallengeCard.tsx","container/Challenge/components/ChallengeInfo.tsx","container/Challenge/components/SponsorButton.tsx","container/Challenge/components/Sponsers.tsx","contracts/contractService.ts","container/Challenge/components/HistoryTimeline.tsx","container/Challenge/components/Notifier.tsx","epics/challengeEpic/action.ts","container/Challenge/Challenge.tsx","translation/index.tsx","components/App/App.tsx","serviceWorker.ts","reducer/challengeReducer.ts","reducer/commonReducer.ts","reducer/challengeGroupReducer.ts","reducer/rootReducer.ts","epics/challengeGroupEpic/challengeGroupEpic.ts","epics/challengeEpic/challengeEpic.ts","epics/index.tsx","store/configureStore.tsx","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","INIT_CONTRACT","SET_CONTRACT","SET_POPUP","CHECK_WALLET","SET_CONFIRM","initContract","setContract","setPopup","checkWallet","setConfirm","type","payload","popMessage","messageKey","showPop","module","exports","p","StyledParticle","styled","position","top","left","width","height","Home","process","browser","window","etherem","enable","this","props","require","particlesJS","load","_this$props","data","intl","closePopup","_ref","get","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","id","_Components_Header__WEBPACK_IMPORTED_MODULE_10__","title","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_12___default","open","keepMounted","onClose","aria-labelledby","aria-describedby","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_14___default","style","wordBreak","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_15___default","formatMessage","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_16___default","onClick","color","React","Component","connect","state","dispath","injectIntl","REACT_APP_THEME","REACT_APP_SUB_THEME","REACT_APP_FONT_COLOR","REACT_APP_THEME_BACKGROUND","APP_THEME","APP_SUB_THEME","APP_FONT_COLOR","APP_FONT_COLOR_DARK","APP_LIGHT_BG","COLOR_BAR","concat","breakPoint","supportLang","transfer","_callee2","account","url","_Users_shiacruz_Desktop_projects_dapp_CoinChallengeWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context2","prev","next","location","href","indexOf","abrupt","URL","searchParams","web3","eth","sendTransaction","from","to","value","console","log","stop","action$","pipe","ofType","switchMap","Object","_Users_shiacruz_Desktop_projects_dapp_CoinChallengeWeb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee","accounts","txWeb3","injectProvider","txContract","network","providers","contract","_context","detectNetwork","sent","Web3","ethereum","currentProvider","newContract","WebsocketProvider","getAccounts","t0","userAddress","length","error","t1","NO_PROVIDER","key","StyledAppBar","AppBar","background","textAlign","lineHeight","LangIcon","Language","right","LangMenu","ButtonAppBar","anchorEl","handeClick","e","_this","setState","currentTarget","handleClose","onSelectLang","lang","pathname","history","matches","matchPathFunc","restUrl","params","push","_this2","Boolean","react_default","Menu_default","TransitionComponent","Fade","map","item","MenuItem_default","PureComponent","withRouter","Header","getMetmaskUrl","formatPercent","isUrlValid","formatNumber","parseLangPath","detect_browser__WEBPACK_IMPORTED_MODULE_0__","decimal_js__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_Src_contants_common__WEBPACK_IMPORTED_MODULE_3__","detect","name","b","Decimal","toPrecision","match","val","matchPath","path","strict","lng","splitLng","split","toUpperCase","networkAddress","contractAddress","web3Interface","address","Contract","CoinChallengs","abi","gas","err","parseChallenge","response","targetDays","Number","_targetDays","totalDays","_totalDays","completeDays","_completeDays","startDayTimestamp","_startDayTimestamp","sponserSize","_sponsorSize","amount","utils","fromWei","_amount","netId","undefined","host","net","getId","_x","apply","arguments","setCreateResult","Transaction","txHash","classNames","target","LinearProgress_default","className","Form","display","flexWrap","flexDirection","alignItems",".textField","zIndex","&:focus label",".button","backgroundColor","padding","&:hover","opacity","Styles","marginTop","minWidth","@media only screen and (maxWidth: 480px)","Icon","margin","maxWidth","LabelTxt","fontSize","WaitingBlk",".progress","Label","text","isInvalid","defaultGroupState","minDays","maxDays","maxDelayDays","minAmount","CreateChallengeGroup","challengeGroup","objectSpread","onTextChange","_this$state","onDayChange","_this$state2","onDelayDayChange","_this$state3","onAmountChange","field","_this$state4","onUrlChange","_this$state5","onSubmit","hasError","keys","newChallengeGroup","createResult","status","_this$state6","isConfirming","noValidate","autoComplete","src","Logo","TextField_default","label","variant","placeholder","onChange","InputLabelProps","LabelProp","required","Transaction_Transaction","Button_default","shrink","commonReducer","dispatch","StyledTtitleCtr","defineProperty","minHeight","StyledTitle","ChallengeCard","memo","groupId","invalidAddress","LogoImg","StyledFont","StyledUnitFont","StyledContent","CrowdCtr","justifyContent","InfoBlk","StyledInfoCtr","withConfig","displayName","componentId","bgcolor","Grid","InfoTxt","Address","Amount","REACT_APP_COIN","withStyles","_theme","lightTooltip","classes","sponsorAmount","Tooltip_default","placement","tooltip","FabCtr",".sponsor-btn","SponsorButton","amountRef","createRef","commentRef","amountError","commentError","onConfirm","current","comment","trim","onSponsor","handleOpen","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","inputRef","fullWidth","DialogActions_default","SnackbarCtr",".bar-item","div","SponserCtr","InnerContent","CoinTxt","Comment","Sponsers","sponsors","sponser","idx","SnackbarContent_default","message","Sponsers_Address","who","newChallengesEvents","_ref3","asyncToGenerator","regenerator_default","_ref2","filter","callback","events","NewChallenge","fromBlock","_error","event","_event$returnValues","returnValues","proposer","_x2","getPastChallenges","_ref5","_callee3","_ref4","challenger","statusData","finishChallenges","i","_context3","Array","fill","getAllPastEvents","_x3","_ref7","_callee5","options","_args5","_context5","getPastEvents","_x5","getPastSponsor","_ref8","_callee6","sponsers","_context6","blockNumber","slice","reverse","sponsor","_sponsor$returnValues","_x6","_x7","_x8","sponsorEvents","_ref10","_callee7","_ref9","_ref9$fromBlock","_context7","SponsorChallenge","on","_event$returnValues2","_x9","STATUS","TimelineCtr","HistoryTimeline","fetched","challengesStatus","values","pastStatus","x","y","lib","colorScale","bottom","string","tooltipHtml","StyledTxt","Notifier","queue","registered","messageInfo","Math","random","processQueue","shift","handleExited","insertEvent","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ContentProps","action","IconButton_default","aria-label","Close_default","GET_CAHLLENGE","setConfirmSponsor","ChallengeContainer","StyledGridList","Challenge","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sponsorFetched","onNewSponsor","sponserChallenge","fetchChallenge","isAddress","sponsorData","reduce","accumulator","checkAndFetch","_this$props3","isCofirmingSponsor","txhash","groupName","groupImage","Helmet","rel","components_ChallengeCard","components_ChallengeInfo","components_SponsorButton","components_Sponsers","components_HistoryTimeline","components_Notifier","challengeState","commonState","toJS","addLocaleData","toConsumableArray","localeEn","localeZh","WrappedComponent","messgaes","en_US","messageEN_US","zh_TW","messageZH_TW","zh_CN","messageZH_CN","theme","createMuiTheme","palette","primary","main","light","dark","typography","useNextVariants","Body","fontFamily","MainContainer","paddingTop","Landing","Link","supportRegex","join","App","jssStyles","document","getElementById","remove","styles","Switch","Route","exact","component","Redirect","withTheme","_React$Component","MutilLang","_getPrototypeOf2","_len","args","_key","inherits","createClass","listen","nextLang","locale","index_es","messages","hostname","initState","initialState","Record","loading","stateMaker","_ref$accounts","merge","set","challengeGroupReducer","__PRELOADED_STATE__","challenge","challengeReducer","rootReducer","combineReducers","common","challengeGroupEpic","state$","take","_contract$methods","toWei","methods","createChallengeGroup","send","_err","hash","mergeMap","_contract$methods2","challengeObject","startTime","floor","Date","now","createChallenge","then","res","of","gasUsed","catchError","parseErrorMsg","repeat","challengeEpic","getChallengeGroup","_name","_url","getChallenge","sponsorChallenge","String","combineEpics","commonEpics","challengeGroupEpics","challengeEpics","epicMiddleware","createEpicMiddleware","middlewares","store","createStore","applyMiddleware","run","rootEpic","ReactDOM","hydrate","es","BrowserRouter","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bba8de98.chunk.js","sourcesContent":["import Contract from 'web3/eth/contract'\n\nexport const INIT_CONTRACT = '@COMMON/INIT_CONTRACT'\nexport const SET_CONTRACT = '@COMMON/SET_CONTRACT'\n\nexport const SET_POPUP = '@COMMON/SET_POPUP'\nexport const CHECK_WALLET = '@COMMON/CHECK_WALLET'\n\nexport const SET_CONFIRM = '@COMMON/SET_CONFIRM'\n\nexport const initContract = () => ({ type: INIT_CONTRACT })\n\nexport const setContract = (payload: {\n  txContract: Contract | null\n  contract: Contract | null\n  userAddress: string | null\n  accounts?: Array<string>\n  error: object | null\n}) => ({\n  type: SET_CONTRACT,\n  payload\n})\n\nexport interface SetPopProps {\n  popMessage?: string\n  messageKey?: string\n  showPop: boolean\n}\n\nexport const setPopup = (payload: SetPopProps) => ({\n  type: SET_POPUP,\n  payload: {\n    popMessage: payload.popMessage || '',\n    messageKey: payload.messageKey || null,\n    showPop: payload.showPop\n  }\n})\n\nexport const checkWallet = () => ({ type: CHECK_WALLET })\n\nexport interface SetConfirmProp {\n  isConfirming: boolean\n  txHash?: string\n}\n\nexport const setConfirm = (payload: SetConfirmProp) => ({\n  type: SET_CONFIRM,\n  payload\n})\n","module.exports = __webpack_public_path__ + \"static/media/logo.d58d94da.png\";","import React from 'react'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport { Map } from 'immutable'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { initContract, setPopup } from '@Epics/commonEpic/action'\nimport Header from '@Components/Header'\nimport styled from 'styled-components'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Button from '@material-ui/core/Button'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\n\nconst StyledParticle = styled('div')({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%'\n})\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  return {\n    data: state.get('common') as CommonStateType\n  }\n}\n\nconst mapDispatchToProps = (dispath: Dispatch) => ({\n  initContract: () => dispath(initContract()),\n  closePopup: () => dispath(setPopup({ showPop: false }))\n})\n\ninterface Props {\n  data: CommonStateType\n  initContract: () => void\n  closePopup: () => void\n}\n\nclass Home extends React.Component<Props & InjectedIntlProps> {\n  public async componentDidMount() {\n    if (process.browser && window.etherem) {\n      await window.etherem.enable()\n    }\n    this.props.initContract()\n    if (process.browser) {\n      require('particles.js')\n      window.particlesJS.load('particle-body', '/particlesjs-config.json')\n    }\n  }\n\n  render() {\n    const { data, intl, closePopup } = this.props\n    const [popMessage, messageKey] = [\n      data.get('popMessage'),\n      data.get('messageKey')\n    ]\n\n    return (\n      <React.Fragment>\n        <StyledParticle id='particle-body' />\n        <Header title='CoinChallenges' />\n        <Dialog\n          open={data.get('showPop')}\n          keepMounted\n          onClose={closePopup}\n          aria-labelledby='alert-dialog-slide-title'\n          aria-describedby='alert-dialog-slide-description'\n        >\n          <DialogContent style={{ wordBreak: 'break-all' }}>\n            <DialogContentText id='alert-dialog-slide-description'>\n              {messageKey ? intl.formatMessage({ id: messageKey }) : popMessage}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closePopup} color='primary'>\n              {intl.formatMessage({ id: 'ok' })}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(Home))\n","const {\n  REACT_APP_THEME,\n  REACT_APP_SUB_THEME,\n  REACT_APP_FONT_COLOR,\n  REACT_APP_THEME_BACKGROUND\n} = process.env\nexport const APP_THEME = REACT_APP_THEME || '#ff5864'\nexport const APP_SUB_THEME = REACT_APP_SUB_THEME || '#ff99a0'\nexport const APP_FONT_COLOR = REACT_APP_FONT_COLOR || '#fffafa'\nexport const APP_FONT_COLOR_DARK = '#101010'\nexport const APP_LIGHT_BG = '#fffafa'\nexport const APP_THEME_BACKGROUND =\n  REACT_APP_THEME_BACKGROUND ||\n  `linear-gradient(45deg, ${APP_THEME} 30%, ${APP_SUB_THEME} 90%)`\n\nexport const COLOR_BAR = [\n  '#ff6776',\n  'rgba(0, 118, 216, 0.6)',\n  'rgba(0, 163, 56, 0.6)'\n]\n","export const breakPoint = '800px'\nexport const supportLang = ['en_US', 'zh_TW', 'zh_CN']\n","import { Action } from '@Src/typing/globalTypes'\nimport { INIT_CONTRACT, setContract, setPopup } from './action'\nimport { ofType, ActionsObservable } from 'redux-observable'\nimport { switchMap } from 'rxjs/operators'\nimport Web3 from 'web3'\nimport { NO_PROVIDER } from '@Src/contants/errorCode'\nimport { newContract, detectNetwork } from '@Utils/contractUtils'\n\nasync function transfer(account: string | null) {\n  if (\n    !account ||\n    typeof location === 'undefined' ||\n    location.href.indexOf('localhost') == -1\n  ) {\n    return\n  }\n  var url = new URL(location.href)\n  var transfer = url.searchParams.get('transfer')\n  if (transfer) {\n    await web3.eth.sendTransaction({\n      from: '0x1ce421937a6f59bf58faafe316d23aaed690da18',\n      to: account,\n      value: 2000000000000000000\n    })\n    console.log(`transfer 2 eth to ${account} success!`)\n  }\n}\n\nexport const initContractEpic = (action$: ActionsObservable<Action>) =>\n  action$.pipe(\n    ofType(INIT_CONTRACT),\n    switchMap(async () => {\n      let accounts: string[]\n      let txWeb3: Web3 | null = null\n\n      try {\n        let injectProvider\n        let txContract = null\n        let network = await detectNetwork(null)\n\n        if (typeof web3 === 'undefined' || !process.browser) {\n          window.web3 = {}\n        } else {\n          txWeb3 = new Web3(window.ethereum || web3.currentProvider)\n          network = await detectNetwork(txWeb3)\n          txContract = newContract(txWeb3)\n        }\n\n        const providers = new Web3().providers\n        injectProvider = new providers.WebsocketProvider(network)\n\n        web3 = new Web3(injectProvider)\n        accounts = txWeb3\n          ? await txWeb3.eth.getAccounts()\n          : await web3.eth.getAccounts()\n\n        const contract = newContract(web3)\n        transfer(accounts[0] || null)\n\n        return setContract({\n          txContract,\n          contract,\n          userAddress: accounts.length ? accounts[0] : null,\n          accounts,\n          error: null\n        })\n      } catch (e) {\n        return setPopup({\n          showPop: true,\n          messageKey: NO_PROVIDER.key\n        })\n      }\n    })\n  )\n\nexport default [initContractEpic]\n","export const NO_PROVIDER = {\n  error: 511,\n  key: 'providerNotFound'\n}\n","import React, { ComponentType, PureComponent } from 'react'\nimport { withRouter, RouteComponentProps, Router } from 'react-router-dom'\nimport AppBar, { AppBarProps } from '@material-ui/core/AppBar'\nimport { APP_THEME, APP_FONT_COLOR } from '@Src/contants/themeColor'\nimport styled from 'styled-components'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Fade from '@material-ui/core/Fade'\nimport Language from '@material-ui/icons/Language'\nimport { SvgIconProps } from '@material-ui/core/SvgIcon'\nimport { supportLang } from '@Src/contants/common'\nimport { matchPathFunc } from '@Utils/index'\n\nconst StyledAppBar = styled(AppBar)({\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  background: APP_THEME,\n  textAlign: 'center',\n  lineHeight: '50px',\n  color: APP_FONT_COLOR\n}) as ComponentType<AppBarProps>\n\nconst LangIcon = styled(Language)({\n  position: 'absolute',\n  top: 15,\n  right: 10\n}) as ComponentType<SvgIconProps>\n\ninterface BarProp extends RouteComponentProps {\n  title: string\n}\n\ninterface BarState {\n  anchorEl: null | EventTarget\n}\n\nconst LangMenu = [\n  {\n    value: supportLang[0],\n    title: 'English'\n  },\n  {\n    value: supportLang[1],\n    title: '繁體中文'\n  },\n  {\n    value: supportLang[2],\n    title: '简体中文'\n  }\n]\nclass ButtonAppBar extends PureComponent<BarProp, BarState> {\n  public state = {\n    anchorEl: null\n  }\n\n  private handeClick = (e: React.MouseEvent) => {\n    this.setState({\n      anchorEl: e.currentTarget\n    })\n  }\n\n  private handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  private onSelectLang = (lang: string) => () => {\n    const {\n      location: { pathname },\n      history\n    } = this.props\n\n    const matches = matchPathFunc(pathname)\n    const restUrl = matches.params ? matches.params[0] : ''\n    history.push(`/${lang}/${restUrl}`)\n    this.handleClose()\n  }\n\n  public render() {\n    const { anchorEl } = this.state\n    const open = Boolean(anchorEl)\n    return (\n      <StyledAppBar>\n        <h1>\n          {this.props.title}\n          <LangIcon onClick={this.handeClick} />\n        </h1>\n        <div style={{ position: 'relative' }}>\n          <Menu\n            id='fade-menu'\n            anchorEl={anchorEl}\n            open={open}\n            onClose={this.handleClose}\n            TransitionComponent={Fade}\n          >\n            {LangMenu.map(item => (\n              <MenuItem\n                key={item.value}\n                onClick={this.onSelectLang(item.value)}\n              >\n                {item.title}\n              </MenuItem>\n            ))}\n          </Menu>\n        </div>\n      </StyledAppBar>\n    )\n  }\n}\n\nexport default withRouter(ButtonAppBar)\n","export { default } from './Header'\n","import { detect } from 'detect-browser'\nimport { Decimal } from 'decimal.js'\nimport { matchPath } from 'react-router-dom'\nimport { supportLang } from '@Src/contants/common'\n\nconst browser = detect()\n\nexport const getMetmaskUrl = () => {\n  switch (browser && browser.name) {\n    case 'chrome':\n      return 'https://chrome.google.com/webstore/detail/nkbihfbeogaeaoehlefnkodbefgpgknn'\n    case 'firefox':\n      return 'https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/'\n    case 'opera':\n      return 'https://addons.opera.com/en/extensions/details/metamask/'\n    default:\n      return null\n  }\n}\n\nexport const formatPercent = (a: number, b: number) => {\n  if (b === 0) {\n    return '0.0'\n  }\n  return new Decimal((a * 100) / b).toPrecision(2)\n}\n\nexport const isUrlValid = (url: string) => {\n  return url.match(\n    /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/\n  )\n}\n\nexport const formatNumber = (val: number) => {\n  val = val || 0\n  return new Decimal(val).toPrecision(5)\n}\n\ninterface MatchParam {\n  params: {\n    lng: string\n  }\n}\n\nexport const matchPathFunc = (pathname: string) =>\n  matchPath(pathname, {\n    path: '/:lng/**/',\n    strict: false\n  }) as MatchParam\n\nexport const parseLangPath = (pathname: string): string => {\n  const match = matchPathFunc(pathname)\n\n  let { lng } = match ? match.params : { lng: '' }\n\n  if (!lng || lng === '') {\n    lng = require('browser-locale')()\n    lng = lng.indexOf('en') > -1 ? 'en' : lng\n    let splitLng = lng ? lng.split(/-|_/) : ['en']\n    lng =\n      splitLng.length > 1\n        ? `${splitLng[0]}-${splitLng[1].toUpperCase()}`\n        : splitLng[0]\n  }\n\n  if (!match || supportLang.indexOf(lng) < 0) {\n    return 'en'\n  }\n\n  return lng\n}\n","import Web3 from 'web3'\nimport CoinChallengs from '@Src/contracts/CoinChallenges.json'\nimport { ChallengeType } from '@Src/typing/globalTypes'\n\nlet networkAddress = 'ws://localhost:7545'\nlet contractAddress = '0x21e4624c5a0b3fda81d0833d412dded2bb3a7a7c'\n\nexport const newContract = (web3Interface: Web3, address?: string) => {\n  let newContract = null\n  try {\n    newContract = new web3Interface.eth.Contract(\n      CoinChallengs.abi,\n      address || contractAddress,\n      {\n        gas: 6000000\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n  return newContract\n}\n\nexport const parseChallenge = (response: any): ChallengeType => {\n  const challenge = {\n    targetDays: Number(response._targetDays),\n    totalDays: Number(response._totalDays),\n    completeDays: Number(response._completeDays),\n    startDayTimestamp: Number(response._startDayTimestamp) * 1000 * 86400,\n    sponserSize: Number(response._sponsorSize),\n    amount: Number(Web3.utils.fromWei(response._amount))\n  }\n\n  return challenge\n}\n\nexport const detectNetwork = async (web3: Web3 | null) => {\n  let netId = 0\n  if (!web3) {\n    netId =\n      typeof location !== undefined && location.host.indexOf('localhost') > -1\n        ? 0\n        : 3\n  } else {\n    netId = await web3.eth.net.getId()\n  }\n\n  switch (netId) {\n    case 1: //main net\n      break\n    case 3: //ropsten\n      networkAddress =\n        'wss://ropsten.infura.io/ws/v3/8bf4cd050c0f4dcebfba65a2ceab3fe0'\n      contractAddress = '0x353acf73C7c2e7E07D666cC1c615fcbdAc62f7D8'\n      break\n    default:\n      networkAddress = 'ws://localhost:7545'\n      contractAddress = '0x21e4624c5a0b3fda81d0833d412dded2bb3a7a7c'\n  }\n  return networkAddress\n}\n","export const CREATE_CHALLENGE_GROUP = 'CREATE_CHALLENGE_GROUP'\nexport const SET_CREATE_RESULT = 'SET_CREATE_RESULT'\n\nexport const newChallengeGroup = (payload: object) => ({\n  type: CREATE_CHALLENGE_GROUP,\n  payload\n})\n\nexport interface SetResultProp {\n  response: {\n    status?: boolean\n    gasUsed?: number\n  }\n  error: boolean\n}\n\nexport const setCreateResult = (payload: SetResultProp) => ({\n  type: SET_CREATE_RESULT,\n  payload\n})\n","import React from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\ninterface TransactionProp {\n  txHash?: string\n  classNames?: string\n}\n\nfunction Transaction({ txHash, classNames }: TransactionProp) {\n  return (\n    <React.Fragment>\n      {txHash ? (\n        <a href={`https://ropsten.etherscan.io/tx/${txHash}`} target='_blank'>\n          Transaction is waiting for confirmation\n        </a>\n      ) : null}\n\n      <LinearProgress color='secondary' className={classNames} />\n    </React.Fragment>\n  )\n}\n\nexport default Transaction\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\nimport Contract from 'web3/eth/contract'\nimport { ChallengeGroupType } from '@Src/typing/globalTypes'\nimport Logo from '@Src/images/logo.png'\n\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport {\n  newChallengeGroup,\n  setCreateResult,\n  SetResultProp\n} from '@Epics/challengeGroupEpic/action'\nimport { checkWallet, setPopup, SetPopProps } from '@Epics/commonEpic/action'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport { ChallengeGroupStateType } from '@Reducers/challengeGroupReducer'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\n\nimport Transaction from '@Components/Transaction'\nimport { APP_THEME } from '@Src/contants/themeColor'\nimport { isUrlValid } from '@Src/utils'\n\nconst Form = styled('form')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexDirection: 'column',\n  alignItems: 'center',\n  '.textField': {\n    background: '#fff',\n    zIndex: 1,\n    '&:focus label': {\n      color: `${APP_THEME} !important`\n    }\n  },\n  '.button': {\n    backgroundColor: APP_THEME,\n    color: '#fff',\n    padding: '0 40px',\n    '&:hover': {\n      backgroundColor: APP_THEME,\n      opacity: 0.9\n    }\n  }\n})\n\nconst Styles = {\n  marginTop: '30px',\n  minWidth: '400px',\n  '@media only screen and (maxWidth: 480px)': {\n    width: '95%',\n    minWidth: '0'\n  }\n}\n\nconst Icon = styled('img')({\n  margin: '20px 0',\n  maxWidth: '200px',\n  zIndex: 1\n})\n\nconst LabelTxt = styled('span')({\n  fontSize: '20px'\n})\n\nconst WaitingBlk = styled('div')({\n  zIndex: 1,\n  '.progress': {\n    width: '100%',\n    margin: '15px 0'\n  }\n})\n\nfunction Label({ text }: { text: string }) {\n  return <LabelTxt>{text}</LabelTxt>\n}\n\nfunction isInvalid(val: number) {\n  return !(Number(val) >= 0 && Number(val) <= 90)\n}\n\nconst defaultGroupState = {\n  id: '',\n  name: '',\n  url: '',\n  minDays: '',\n  maxDays: '',\n  maxDelayDays: '',\n  minAmount: ''\n}\n\ntype CreateChallengeGroupProp = {\n  contract: Contract | null\n  isConfirming: boolean\n  txHash?: string\n  createResult: ChallengeGroupStateType\n  newChallengeGroup: (payload: ChallengeGroupType) => void\n  checkWallet: () => void\n  setCreateResult: (payload: SetResultProp) => void\n  setPopup: (payload: SetPopProps) => void\n}\n\ntype ErrorProp = { [s in keyof ChallengeGroupType]?: boolean }\ntype StateProp = {\n  challengeGroup: ChallengeGroupType\n  error: ErrorProp\n}\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  const commonReducer = state.get('common') as CommonStateType\n  return {\n    contract: commonReducer.get('contract'),\n    isConfirming: commonReducer.get('isConfirming'),\n    txHash: commonReducer.get('txHash'),\n    createResult: state.get('challengeGroup') as ChallengeGroupStateType\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  checkWallet: () => dispatch(checkWallet()),\n  setPopup: (payload: SetPopProps) => dispatch(setPopup(payload)),\n  setCreateResult: (payload: SetResultProp) =>\n    dispatch(setCreateResult(payload)),\n  newChallengeGroup: (payload: ChallengeGroupType) => {\n    dispatch(\n      newChallengeGroup({\n        ...payload,\n        dispatch\n      })\n    )\n  }\n})\nclass CreateChallengeGroup extends React.Component<\n  CreateChallengeGroupProp & InjectedIntlProps,\n  StateProp\n> {\n  static LabelProp = {\n    shrink: true\n  }\n\n  public state = {\n    challengeGroup: { ...defaultGroupState } as ChallengeGroupType,\n    error: {} as ErrorProp\n  }\n\n  private onTextChange = (key: keyof ChallengeGroupType) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[key] = val\n    error[key] = val.length <= 0\n    this.setState({\n      challengeGroup: { ...challengeGroup },\n      error: { ...error }\n    })\n  }\n\n  private onDayChange = (key: keyof ChallengeGroupType) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[key] = val\n    const minDays = Number(challengeGroup.minDays)\n    const maxDays = Number(challengeGroup.maxDays)\n    error['minDays'] =\n      isInvalid(minDays) || minDays >= Number(challengeGroup.maxDays)\n    error['maxDays'] =\n      isInvalid(maxDays) || maxDays <= Number(challengeGroup.minDays)\n    this.setState({\n      challengeGroup: { ...challengeGroup },\n      error: { ...error }\n    })\n  }\n\n  private onDelayDayChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup.maxDelayDays = val\n    error.maxDelayDays = !(Number(val) >= 0 && Number(val) <= 90)\n    this.setState({\n      challengeGroup: { ...challengeGroup },\n      error: { ...error }\n    })\n  }\n\n  private onAmountChange = (field: keyof ChallengeGroupType) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup[field] = val\n    error[field] = Number(val) <= 0\n    this.setState({\n      challengeGroup,\n      error\n    })\n  }\n\n  private onUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = e.currentTarget.value as string\n    const { challengeGroup, error } = this.state\n    challengeGroup['url'] = val\n    error['url'] = !isUrlValid(val)\n    this.setState({\n      challengeGroup: { ...challengeGroup },\n      error: { ...error }\n    })\n  }\n\n  private onSubmit = () => {\n    let hasError = Object.keys(this.state.error).length === 0\n    for (let field in this.state.error) {\n      hasError = hasError || this.state.error[field]\n    }\n    if (hasError) {\n      this.props.setPopup({\n        showPop: true,\n        messageKey: 'createDataError'\n      })\n      return\n    }\n    this.props.checkWallet()\n    this.props.newChallengeGroup(this.state.challengeGroup)\n  }\n\n  public componentDidUpdate() {\n    const response = this.props.createResult.get('response')\n    if (response.status) {\n      this.props.setCreateResult({\n        response: {},\n        error: false\n      })\n      this.setState({ challengeGroup: defaultGroupState })\n    }\n  }\n\n  public render() {\n    const { challengeGroup, error } = this.state\n    const { intl, isConfirming, txHash } = this.props\n\n    return (\n      <Form noValidate autoComplete='off'>\n        <Icon src={Logo} />\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupId' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          placeholder='e.g: com.coin.challenge'\n          value={challengeGroup.id}\n          onChange={this.onTextChange('id')}\n          error={error.id}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupName' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          value={challengeGroup.name}\n          onChange={this.onTextChange('name')}\n          error={error.name}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'challengeGroupCover' })} />\n          }\n          className='textField'\n          margin='normal'\n          variant='outlined'\n          value={challengeGroup.url}\n          onChange={this.onUrlChange}\n          error={error.url}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'minChallengeDays' })} />\n          }\n          className='textField'\n          type='number'\n          margin='normal'\n          variant='outlined'\n          placeholder='12 - 90'\n          value={challengeGroup.minDays}\n          error={error.minDays}\n          onChange={this.onDayChange('minDays')}\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'maxChallengeDays' })} />\n          }\n          className='textField'\n          type='number'\n          margin='normal'\n          variant='outlined'\n          value={challengeGroup.maxDays}\n          error={error.maxDays}\n          onChange={this.onDayChange('maxDays')}\n          placeholder='12 - 90'\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n\n        <TextField\n          label={<Label text={intl.formatMessage({ id: 'maxDelayDays' })} />}\n          className='textField'\n          type='number'\n          margin='normal'\n          value={challengeGroup.maxDelayDays}\n          onChange={this.onDelayDayChange}\n          error={error.maxDelayDays}\n          variant='outlined'\n          placeholder='< 90 (day)'\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n\n        <TextField\n          label={\n            <Label text={intl.formatMessage({ id: 'minChallengeAmount' })} />\n          }\n          className='textField'\n          type='number'\n          margin='normal'\n          value={challengeGroup.minAmount}\n          onChange={this.onAmountChange('minAmount')}\n          error={error.minAmount}\n          variant='outlined'\n          InputLabelProps={CreateChallengeGroup.LabelProp}\n          style={Styles}\n          required\n        />\n        <br />\n        {isConfirming ? (\n          <WaitingBlk>\n            <Transaction txHash={txHash} classNames='progress' />\n          </WaitingBlk>\n        ) : null}\n        <Button variant='contained' className='button' onClick={this.onSubmit}>\n          Create\n        </Button>\n      </Form>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectIntl(CreateChallengeGroup))\n","import React from 'react'\nimport styled from 'styled-components'\n// import { FormattedMessage } from 'react-intl'\nimport { breakPoint } from '@Src/contants/common'\nimport LogoImg from '@Src/images/logo.png'\n\nconst StyledTtitleCtr = styled('div')({\n  position: 'relative',\n  [`@media (max-width: ${breakPoint})`]: {\n    minHeight: 0\n  }\n})\n\nconst StyledTitle = styled('span')({\n  position: 'absolute',\n  top: 0,\n  fontSize: '34px',\n  padding: '10px',\n  lineHeight: '30px',\n  width: '100%'\n})\n\nconst Logo = styled('img')({\n  display: 'block',\n  width: '50%',\n  margin: '0 auto'\n})\ninterface ChallengeCardProp {\n  groupId: string\n  name: string\n  url: string\n  invalidAddress: boolean\n}\n\nconst ChallengeCard = React.memo(\n  ({ groupId, name, url, invalidAddress }: ChallengeCardProp) => (\n    <React.Fragment>\n      {/* <StyledFont>Challenger: {address}</StyledFont> */}\n      <StyledTtitleCtr>\n        <StyledTitle>{invalidAddress ? '' : name}</StyledTitle>\n        {invalidAddress || url === '' ? (\n          <Logo src={LogoImg} />\n        ) : (\n          <img src={url} width='100%' />\n        )}\n      </StyledTtitleCtr>\n    </React.Fragment>\n  )\n)\n\nexport default ChallengeCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  APP_LIGHT_BG,\n  APP_FONT_COLOR_DARK,\n  APP_THEME\n} from '@Src/contants/themeColor'\nimport { breakPoint } from '@Src/contants/common'\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\nimport { formatPercent, formatNumber } from '@Src/utils'\n\nconst StyledFont = styled('span')({\n  fontSize: '40px',\n  color: APP_THEME,\n  textAlign: 'center'\n})\n\nconst StyledUnitFont = styled('span')({\n  color: APP_FONT_COLOR_DARK,\n  opacity: 0.6\n})\n\nconst StyledContent = styled('div')({\n  fontSize: 24,\n  color: APP_FONT_COLOR_DARK,\n  opacity: 0.6,\n  margin: '10px'\n})\n\nconst CrowdCtr = styled('div')({\n  display: 'flex',\n  alignItems: 'baseline',\n  justifyContent: 'center'\n})\n\nconst InfoBlk = styled('div')({\n  textAlign: 'center',\n  background: APP_LIGHT_BG\n})\ninterface InfoCtrProp {\n  bgcolor?: string\n}\nconst StyledInfoCtr = styled('div')<InfoCtrProp>`\n  display: flex;\n  background: ${(props: InfoCtrProp) =>\n    props.bgcolor ? props.bgcolor : APP_LIGHT_BG};\n  justify-content: center;\n  align-items: center;\n  @media (max-width: ${breakPoint}) {\n    flex-direction: column;\n  }\n`\nconst Grid = styled('div')({\n  width: '50%',\n  padding: '10px 0',\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%'\n  }\n})\n\nconst InfoTxt = styled('div')({\n  color: APP_THEME,\n  padding: 5,\n  fontSize: 30\n})\n\nconst styles = (_theme: any) => ({\n  lightTooltip: {\n    fontSize: 20\n  }\n})\n\nconst Address = styled('div')({\n  background: '#fff',\n  color: 'rgba(0, 0, 0, 0.4)',\n  padding: '10px 0'\n})\n\nconst Amount = styled('div')({\n  fontSize: 40,\n  padding: '10px 0'\n})\ninterface ChallengeInfoProp extends InjectedIntlProps, WithStyles {\n  address: string\n  completeDays: number\n  targetDays: number\n  totalDays: number\n  amount: number\n  invalidAddress: boolean\n  sponsorAmount: number\n}\n\nconst { REACT_APP_COIN } = process.env\n\nfunction ChallengeInfo({\n  address,\n  completeDays,\n  targetDays,\n  totalDays,\n  amount,\n  classes,\n  intl,\n  invalidAddress,\n  sponsorAmount\n}: ChallengeInfoProp) {\n  return (\n    <InfoBlk>\n      <Address>{invalidAddress ? '--' : address}</Address>\n      <Amount>\n        {amount} {REACT_APP_COIN}\n      </Amount>\n      <StyledInfoCtr>\n        <Grid>\n          <StyledFont>\n            {completeDays}/{totalDays}\n          </StyledFont>\n          <StyledUnitFont> Days</StyledUnitFont>\n        </Grid>\n        <Grid>\n          <CrowdCtr>\n            <StyledUnitFont>Achieve </StyledUnitFont>\n            <StyledFont>\n              &nbsp;{formatPercent(completeDays, totalDays)}%\n            </StyledFont>\n          </CrowdCtr>\n        </Grid>\n      </StyledInfoCtr>\n      <StyledContent>\n        {intl.formatMessage({ id: 'sponsorContent' })}\n      </StyledContent>\n      <InfoTxt>\n        Achieve rate grater than {formatPercent(targetDays, totalDays)}% can get{' '}\n        <Tooltip\n          title={`${formatNumber(\n            amount\n          )} ${REACT_APP_COIN} from bet , ${formatNumber(\n            sponsorAmount\n          )} ${REACT_APP_COIN} from sponsor`}\n          placement='top'\n          classes={{ tooltip: classes.lightTooltip }}\n        >\n          <span style={{ fontSize: '30px' }}>\n            {formatNumber(amount + sponsorAmount)}\n            {REACT_APP_COIN}\n          </span>\n        </Tooltip>\n      </InfoTxt>\n    </InfoBlk>\n  )\n}\n\nexport default withStyles(styles)(injectIntl(ChallengeInfo))\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport styled from 'styled-components'\nimport { InjectedIntl } from 'react-intl'\nimport { APP_LIGHT_BG } from '@Src/contants/themeColor'\n\nconst FabCtr = styled('span')({\n  display: 'block',\n  textAlign: 'center',\n  padding: 10,\n  background: APP_LIGHT_BG,\n  zIndex: 6,\n  '.sponsor-btn': {\n    padding: '0 30px'\n  }\n})\n\ninterface SponsorButtonState {\n  open: boolean\n  amountError: boolean\n  commentError: boolean\n}\n\ninterface SponsorButtonProp {\n  onSponsor: Function\n  intl: InjectedIntl\n}\n\nconst { REACT_APP_COIN } = process.env\n\nclass SponsorButton extends React.PureComponent<\n  SponsorButtonProp,\n  SponsorButtonState\n> {\n  private amountRef: React.RefObject<any> = React.createRef()\n  private commentRef: React.RefObject<any> = React.createRef()\n\n  public state = {\n    open: false,\n    amountError: false,\n    commentError: false\n  }\n\n  private onConfirm = () => {\n    const amount = Number(this.amountRef.current.value)\n    const comment = this.commentRef.current.value.trim()\n    const amountError = amount <= 0\n    const commentError = comment === ''\n    if (amountError || commentError) {\n      this.setState({\n        amountError,\n        commentError\n      })\n      return\n    }\n    this.props.onSponsor({\n      amount,\n      comment\n    })\n    this.handleClose()\n  }\n\n  private handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  private handleOpen = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  public render() {\n    const { intl } = this.props\n    return (\n      <React.Fragment>\n        <FabCtr onClick={this.handleOpen}>\n          <Button className='sponsor-btn' variant='contained' color='primary'>\n            {intl.formatMessage({ id: 'sponsor' })}\n          </Button>\n        </FabCtr>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby='form-dialog-title'\n        >\n          <DialogTitle id='form-dialog-title'>\n            {intl.formatMessage({ id: 'sponsor' })}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {intl.formatMessage({ id: 'sponsorDesc' })}\n            </DialogContentText>\n            <TextField\n              error={this.state.amountError}\n              required\n              margin='dense'\n              id='amount'\n              label={`${intl.formatMessage({\n                id: 'amount'\n              })} (${REACT_APP_COIN})`}\n              type='number'\n              inputRef={this.amountRef}\n              fullWidth\n            />\n            <TextField\n              error={this.state.commentError}\n              required\n              margin='dense'\n              id='comment'\n              label={intl.formatMessage({ id: 'comment' })}\n              type='text'\n              inputRef={this.commentRef}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='primary'>\n              {intl.formatMessage({ id: 'cancel' })}\n            </Button>\n            <Button onClick={this.onConfirm} color='primary'>\n              {intl.formatMessage({ id: 'confirm' })}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SponsorButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { sentences } from '@Src/contants/mockSenteces'\nimport { Decimal } from 'decimal.js'\n\nimport { COLOR_BAR } from '@Src/contants/themeColor'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport { breakPoint } from '@Src/contants/common'\nimport { Sponsor } from '@Src/typing/globalTypes'\nimport web3 from 'web3'\n\nconst SnackbarCtr = styled('div')({\n  position: 'relative',\n  margin: '10px 0',\n  '.bar-item': {\n    width: '558px',\n    div: {\n      width: '100%'\n    }\n  },\n  [`@media (max-width:${breakPoint})`]: {\n    width: '100%',\n    '.bar-item': {\n      width: '100%'\n    }\n  }\n})\n\nconst SponserCtr = styled('div')({\n  marginTop: '10px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n})\n\nconst Address = styled('span')({\n  fontSize: '12px',\n  color: 'rgba(0, 0, 0, 0.3)'\n})\n\nconst InnerContent = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  [`@media (max-width: ${breakPoint})`]: {\n    flexDirection: 'column-reverse'\n  }\n})\n\nconst CoinTxt = styled('div')({\n  color: '#ffeb3b',\n  textAlign: 'right'\n})\n\nconst Comment = styled('span')({\n  fontSize: '16px'\n})\n\nfunction Sponsers({ sponsors }: { sponsors: Sponsor[] }) {\n  return (\n    <SponserCtr>\n      {sponsors.map((sponser: any, idx: number) => (\n        <SnackbarCtr key={idx}>\n          <SnackbarContent\n            aria-describedby='client-snackbar'\n            style={{ backgroundColor: COLOR_BAR[idx % 3] }}\n            className='bar-item'\n            message={\n              <React.Fragment>\n                <InnerContent>\n                  <Address>{sponser.who}</Address>\n                  <CoinTxt>\n                    +{web3.utils.fromWei(sponser.amount)}{' '}\n                    {process.env.REACT_APP_COIN}\n                  </CoinTxt>\n                </InnerContent>\n                <Comment>{sponser.comment}</Comment>\n              </React.Fragment>\n            }\n          />\n        </SnackbarCtr>\n      ))}\n    </SponserCtr>\n  )\n}\n\nexport default Sponsers\n","import Contract from 'web3/eth/contract'\nimport { Sponsor } from '@Src/typing/globalTypes'\nimport { parseChallenge } from '@Utils/contractUtils'\n//process.env.REACT_APP_CONTRACT_ADDRESS\n\ninterface GetGroupProp {\n  contract: Contract\n  groupId: string\n}\n\nexport const getChallengeGroup = async (props: GetGroupProp) => {\n  const { contract, groupId } = props\n  const res = await contract.methods.getChallengeGroup(groupId).call()\n  return {\n    name: res._name,\n    url: res._url\n  }\n}\n\ninterface GetChallengeProp {\n  contract: Contract\n  challenger: string\n}\n\ninterface GetChallengeEvevntProp {\n  contract: Contract\n  filter?: {\n    challenger?: string\n  }\n  callback?: Function\n}\n\nexport const newChallengesEvents = async ({\n  contract,\n  filter,\n  callback\n}: GetChallengeEvevntProp) => {\n  await contract.events.NewChallenge(\n    {\n      filter,\n      fromBlock: 0\n    },\n    function(_error: any, event: any) {\n      const {\n        proposer,\n        groupId,\n        targetDays,\n        totalDays,\n        startDayTimestamp,\n        amount\n      } = event.returnValues\n      callback &&\n        callback({\n          proposer,\n          groupId,\n          targetDays,\n          totalDays,\n          startDayTimestamp,\n          amount\n        })\n    }\n  )\n}\n\nexport const getPastChallenges = async ({\n  contract,\n  challenger\n}: GetChallengeProp) => {\n  let statusData = new Array(3).fill(0)\n  const finishChallenges =\n    (await getAllPastEvents(contract, 'FinishChallenge', {\n      fromBlock: 0,\n      filter: { who: challenger }\n    })) || []\n  for (let i = 0; i < finishChallenges.length; i++) {\n    const { status } = finishChallenges[i].returnValues\n    statusData[status]++\n  }\n  return statusData\n}\n\nexport const getNewChallengeGroup = async (contract: Contract) => {\n  await contract.events.NewChallengeGroup(\n    {\n      fromBlock: 0\n    },\n    function(_error: any, event: any) {\n      console.log('event,', event)\n    }\n  )\n}\n\ninterface PastEventProp {\n  fromBlock: number\n  toBlock?: number | 'latest'\n  filter?: object\n}\n\nexport const getAllPastEvents = async (\n  contract: Contract | null,\n  event: string = 'allEvents',\n  options?: PastEventProp\n) => {\n  options = options || { fromBlock: 0 }\n  if (!contract) {\n    return\n  }\n  return await contract.getPastEvents(event, options)\n}\n\nexport const getPastSponsor = async (\n  contract: Contract | null,\n  sponserSize?: number,\n  options?: PastEventProp\n) => {\n  options = options || { fromBlock: 0 }\n\n  let response = {\n    blockNumber: 0,\n    data: [] as Sponsor[]\n  }\n  let data: any[] = []\n  const sponsers =\n    (await getAllPastEvents(contract, 'SponsorChallenge', options)) || []\n\n  if (!sponsers.length) {\n    return response\n  }\n\n  sponserSize = sponserSize || sponsers.length\n  data = sponsers.slice(sponserSize * -1).reverse()\n  response.blockNumber = data[0].blockNumber\n\n  response.data =\n    data.map(sponsor => {\n      const { amount, comment, who } = sponsor.returnValues\n      return {\n        amount,\n        comment,\n        who\n      }\n    }) || []\n\n  return response\n}\n\ninterface SponsorEventProp {\n  contract: Contract\n  challenger: string\n  fromBlock?: number\n  callback?: (sponser: Sponsor) => void\n}\nexport const sponsorEvents = async ({\n  contract,\n  challenger,\n  fromBlock = 0,\n  callback\n}: SponsorEventProp) => {\n  contract.events\n    .SponsorChallenge({\n      filter: { challenger: challenger },\n      fromBlock: fromBlock ? fromBlock + 1 : fromBlock\n    })\n    .on('data', function(event) {\n      console.log('sponsor', event)\n      if (callback) {\n        const { amount, comment, who } = event.returnValues\n        callback({\n          amount,\n          comment,\n          who\n        })\n      }\n    })\n}\n\ninterface GetChallengeServerProp {\n  contract: Contract\n  groupId: string\n  challenger: string\n}\nexport const getChallenge = async ({\n  contract,\n  groupId,\n  challenger\n}: GetChallengeServerProp) => {\n  const response = await contract.methods\n    .getChallenge(groupId, challenger)\n    .call()\n  return parseChallenge(response)\n}\n\n// interface GetSponsorProp {\n//   contract: Contract\n//   groupId: string\n//   address: string\n//   sponsorSize: number\n// }\n\n// export const getChellengeSponsors = async ({\n//   contract,\n//   groupId,\n//   address,\n//   sponsorSize\n// }: GetSponsorProp) => {\n//   let sponsors: Sponsor[] = []\n//   for (let i = 0; i < sponsorSize; i++) {\n//     const sponsor = await contract.methods\n//       .getSponsor(groupId, address, i)\n//       .call()\n//     sponsors.push({\n//       who: sponsor._who,\n//       amount: sponsor._amount,\n//       comment: sponsor._comment\n//     })\n//   }\n//   return sponsors\n// }\n\ninterface SponsorProp {\n  contract: Contract\n  groupId: string\n  address: string\n  from: string\n  amount: number\n  comment: string\n}\n\nexport const sponsorChallenge = async ({\n  contract,\n  groupId,\n  address,\n  from,\n  amount,\n  comment\n}: SponsorProp) => {\n  await contract.methods\n    .sponsorChallenge(groupId, address, comment)\n    .send({\n      from,\n      value: amount\n    })\n    .on('error', (err: any) => {\n      console.log('sponer error')\n      console.log(err)\n    })\n    .then((res: any) => {\n      console.log('sponser success')\n      console.log(res)\n    })\n}\n\n// contract.getPastEvents('allEvents', {fromBlock: 0}, function(error, events){ console.log(events); })\n\n// web3.eth.sendTransaction({\n//   from: '0xE13acF256C86292d0f808eA58B8afFE162927a3D',\n//   to: '0xCB4b9C9292410007D6FB7a7C061666B298f06ee2',\n//   value: 2000000000000000000\n// })\n","import React from 'react'\nimport {\n  APP_THEME,\n  APP_LIGHT_BG,\n  APP_FONT_COLOR_DARK\n} from '@Src/contants/themeColor'\nimport styled from 'styled-components'\n\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport { PieChart } from 'react-d3-components'\nimport Contract from 'web3/eth/contract'\nimport { getPastChallenges } from '@Src/contracts/contractService'\n\nconst STATUS = ['Succeeded', 'Failed', 'Aborted']\n\nconst TimelineCtr = styled('div')({\n  background: APP_LIGHT_BG,\n  display: 'flex',\n  justifyContent: 'center',\n  text: {\n    color: APP_FONT_COLOR_DARK\n  }\n})\n\ninterface TimelineProp extends InjectedIntlProps {\n  contract: Contract | null\n  challenger: string\n}\n\ninterface StatusData {\n  x: string\n  y: number\n}\ninterface TimelineState {\n  challengesStatus: {\n    values: StatusData[]\n  }\n}\n\nfunction color(label: string) {\n  if (label.indexOf('success') >= 0) {\n    return '#ff7473'\n  } else if (label.indexOf('failed') >= 0) {\n    return '#47b8e0'\n  }\n  return '#ffc952'\n}\n\nclass HistoryTimeline extends React.PureComponent<TimelineProp, TimelineState> {\n  private fetched: boolean = false\n  public state = {\n    challengesStatus: {\n      values: []\n    }\n  }\n  public async componentDidUpdate() {\n    const { contract, challenger } = this.props\n    if (contract && !this.fetched) {\n      this.fetched = true\n      let values = []\n      const pastStatus: Number[] = await getPastChallenges({\n        contract,\n        challenger\n      })\n      for (let i = 0; i < pastStatus.length; i++) {\n        if (pastStatus[i]) {\n          values.push({\n            x: STATUS[i],\n            y: pastStatus[i]\n          } as StatusData)\n        }\n      }\n      this.setState({\n        challengesStatus: {\n          values\n        }\n      })\n    }\n  }\n  public render() {\n    const { challengesStatus } = this.state\n    if (!challengesStatus.values.length) {\n      return null\n    }\n    return (\n      <TimelineCtr>\n        <PieChart\n          data={this.state.challengesStatus}\n          colorScale={(label: string) => color(label)}\n          x={(data: any) => `${data.x}:${data.y}`}\n          width={600}\n          height={400}\n          margin={{ top: 10, bottom: 10, left: 100, right: 100 }}\n          fill='red'\n          string\n          tooltipHtml={(x: string) => (\n            <span style={{ color: '#34314c' }}>{x}</span>\n          )}\n        />\n      </TimelineCtr>\n    )\n  }\n}\n\nexport default injectIntl(HistoryTimeline)\n","import React, { ReactNode } from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport styled from 'styled-components'\nimport Contract from 'web3/eth/contract'\nimport { newChallengesEvents } from '@Src/contracts/contractService'\nimport { ChallengeType } from '@Src/typing/globalTypes'\nimport { withStyles, WithStyles } from '@material-ui/core/styles'\ninterface MessageProp {\n  key: number\n  message: ReactNode\n}\n\ninterface NotifierState {\n  open: boolean\n  messageInfo: MessageProp | {}\n}\n\ninterface ChallengeEvent extends ChallengeType {\n  proposer: string\n}\n\nconst StyledTxt = styled('span')({\n  color: '#e10050'\n})\n\nconst style = {\n  message: {\n    maxWidth: '85%'\n  }\n}\n\nconst { REACT_APP_COIN } = process.env\n\nclass Notifier extends React.Component<\n  { contract: Contract | null } & WithStyles,\n  NotifierState\n> {\n  private queue: Array<MessageProp> = []\n  private registered: boolean = false\n\n  public state = {\n    open: false,\n    messageInfo: {\n      key: Math.random(),\n      message: ''\n    }\n  }\n\n  private processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift() as MessageProp,\n        open: true\n      })\n    }\n  }\n\n  private handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  private handleExited = () => {\n    this.processQueue()\n  }\n\n  private insertEvent = (props: ChallengeEvent) => {\n    const { proposer, amount } = props\n    this.queue.push({\n      key: Math.random(),\n      message: (\n        <span>\n          {proposer} has created a challenge with{' '}\n          <StyledTxt>{amount}</StyledTxt>\n          {REACT_APP_COIN}\n        </span>\n      )\n    })\n    this.processQueue()\n  }\n\n  public componentDidUpdate() {\n    const { contract } = this.props\n    if (contract && !this.registered) {\n      this.registered = true\n      newChallengesEvents({\n        contract,\n        callback: this.insertEvent\n      })\n    }\n  }\n\n  public render() {\n    const { messageInfo } = this.state\n    const { classes } = this.props\n\n    return (\n      <Snackbar\n        key={messageInfo.key}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={this.state.open}\n        autoHideDuration={2000}\n        onClose={this.handleClose}\n        onExited={this.handleExited}\n        ContentProps={{\n          'aria-describedby': 'message-id',\n          classes\n        }}\n        message={messageInfo.message}\n        action={[\n          <IconButton\n            key='close'\n            aria-label='Close'\n            color='inherit'\n            onClick={this.handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    )\n  }\n}\n\nexport default withStyles(style)(Notifier)\n","import { ChallengeType } from '@Src/typing/globalTypes'\nimport { Sponsor } from '@Src/typing/globalTypes'\nimport { Dispatch } from 'redux'\n\ninterface GetChallengeProp {\n  groupId: string\n  challenger: string\n}\n\nexport interface SetGroupProp {\n  groupName: string\n  groupImage: string\n}\n\nexport interface SetSponserProp {\n  sponsors: Array<Sponsor>\n}\n\nexport interface SponserProp {\n  groupId: string\n  who: string\n  comment: string\n  amount: number\n  dispatch?: Dispatch\n}\n\nexport interface SetConfirmSponsor {\n  isCofirmingSponsor: boolean\n  txhash: string\n}\n\nexport const GET_CAHLLENGE = '@CAHLLENGE/GET_CAHLLENGE'\nexport const SET_CAHLLENGE = '@CAHLLENGE/SET_CAHLLENGE'\nexport const SET_CAHLLENGE_GROUP = '@CAHLLENGE/SET_CAHLLENGE_GROUP'\nexport const SET_CAHLLENGE_SPONSERS = '@CAHLLENGE/SET_CAHLLENGE_SPONSERS'\nexport const SPONSER_CHALLENGE = '@CAHLLENGE/SPONSER_CHALLENGE'\nexport const SET_COFIRM_SPONSOR = '@CAHLLENGE/SET_COFIRM_SPONSOR'\n\nexport const sponserChallenge = (payload: SponserProp) => ({\n  type: SPONSER_CHALLENGE,\n  payload\n})\n\nexport const setChallengeGroup = (payload: SetGroupProp) => ({\n  type: SET_CAHLLENGE_GROUP,\n  payload\n})\n\nexport const getChallenge = (payload: GetChallengeProp) => ({\n  type: GET_CAHLLENGE,\n  payload\n})\n\nexport const setChallenge = (payload: ChallengeType) => ({\n  type: SET_CAHLLENGE,\n  payload\n})\n\nexport const setChallengeSponsers = (payload: SetSponserProp) => ({\n  type: SET_CAHLLENGE_SPONSERS,\n  payload\n})\n\nexport const setConfirmSponsor = (payload: SetConfirmSponsor) => ({\n  type: SET_COFIRM_SPONSOR,\n  payload\n})\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet'\nimport ChallengeCard from './components/ChallengeCard'\nimport ChallengeInfo from './components/ChallengeInfo'\nimport SponsorButton from './components/SponsorButton'\nimport Sponsers from './components/Sponsers'\nimport { ChallengeStateType } from '@Reducers/challengeReducer'\nimport { CommonStateType } from '@Reducers/commonReducer'\nimport HistoryTimeline from './components/HistoryTimeline'\nimport Notifier from './components/Notifier'\nimport { breakPoint } from '@Src/contants/common'\n\nimport Contract from 'web3/eth/contract'\nimport { checkWallet, setPopup, SetPopProps } from '@Epics/commonEpic/action'\nimport {\n  getChallenge,\n  sponserChallenge,\n  SponserProp\n} from '@Epics/challengeEpic/action'\nimport { ChallengeType, Sponsor } from '@Src/typing/globalTypes'\n\nimport { injectIntl, InjectedIntlProps } from 'react-intl'\nimport Transaction from '@Components/Transaction'\nimport web3 from 'web3'\n\nimport { sponsorEvents, getPastSponsor } from '@Src/contracts/contractService'\n\nconst ChallengeContainer = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '30px',\n  [`@media (max-width: ${breakPoint})`]: {\n    marginTop: 0\n  }\n})\n\nconst StyledGridList = styled('div')({\n  width: 800,\n  zIndex: 1,\n  [`@media (max-width: ${breakPoint})`]: {\n    width: '100%'\n  }\n})\n\ninterface ChallengeProp\n  extends RouteComponentProps,\n    ChallengeType,\n    InjectedIntlProps {\n  txContract: Contract | null\n  contract: Contract | null\n  account: string | null\n  error: boolean\n  isCofirmingSponsor: boolean\n  txhash: string\n  groupName: string\n  groupImage: string\n  fetchChallenge: (data: RouteParams) => void\n  sponserChallenge: (payload: SponserProp) => void\n  setChallengeSponsersAction: (sponsors: Sponsor[]) => void\n  checkWallet: () => void\n  setPopup: (payload: SetPopProps) => void\n}\n\ninterface ChallengeState {\n  sponsors: Sponsor[]\n  sponsorAmount: number\n  invalidAddress: boolean\n}\nexport interface RouteParams {\n  address: string\n  groupId: string\n}\n\nconst mapStateToProps = (state: Map<string, object>) => {\n  const challengeState = state.get('challenge') as ChallengeStateType\n  const commonState = state.get('common') as CommonStateType\n  return {\n    txContract: commonState.get('txContract'),\n    contract: commonState.get('contract'),\n    account: commonState.get('userAddress'),\n    ...challengeState.toJS()\n  }\n}\n\nconst mapDispathToProps = (dispatch: Dispatch) => ({\n  fetchChallenge: (data: RouteParams) =>\n    dispatch(\n      getChallenge({\n        groupId: data.groupId,\n        challenger: data.address\n      })\n    ),\n  sponserChallenge: (payload: SponserProp) =>\n    dispatch(\n      sponserChallenge({\n        ...payload,\n        dispatch\n      })\n    ),\n  checkWallet: () => dispatch(checkWallet()),\n  setPopup: (payload: SetPopProps) => dispatch(setPopup(payload))\n})\n\nclass Challenge extends React.Component<ChallengeProp, ChallengeState> {\n  public address: string = ''\n  public groupId: string = ''\n  public fetched: boolean = false\n  public sponsorFetched: boolean = false\n\n  constructor(props: ChallengeProp) {\n    super(props)\n    const params = this.props.match.params as RouteParams\n    this.address = params.address\n    this.groupId = params.groupId\n    this.state = {\n      sponsors: [],\n      sponsorAmount: 0,\n      invalidAddress: false\n    }\n  }\n\n  private onNewSponsor = (sponsor: Sponsor) => {\n    const sponsors = this.state.sponsors\n    this.setState({\n      sponsors: [sponsor].concat(sponsors),\n      sponsorAmount: this.state.sponsorAmount + Number(sponsor.amount)\n    })\n  }\n\n  private async checkAndFetch() {\n    const {\n      contract,\n      fetchChallenge,\n      sponserSize,\n      targetDays,\n      setPopup\n    } = this.props\n    const isValid = await web3.utils.isAddress(this.address)\n    if (!isValid && !this.fetched) {\n      setPopup({\n        showPop: true,\n        messageKey: 'invalidAddress'\n      })\n      this.setState({\n        invalidAddress: true\n      })\n      this.fetched = true\n      return\n    }\n\n    if (contract) {\n      if (!this.fetched) {\n        fetchChallenge({\n          address: this.address,\n          groupId: this.groupId\n        })\n        this.fetched = true\n      } else if (!this.sponsorFetched && targetDays > 0) {\n        this.sponsorFetched = true\n        const sponsorData = await getPastSponsor(contract, sponserSize)\n        sponsorEvents({\n          contract,\n          challenger: this.address,\n          fromBlock: sponsorData.blockNumber,\n          callback: this.onNewSponsor\n        })\n        this.setState({\n          sponsors: sponsorData.data,\n          sponsorAmount: sponsorData.data.reduce(\n            (accumulator, sponsor) =>\n              accumulator + Number(web3.utils.fromWei(sponsor.amount)),\n            0\n          )\n        })\n      }\n    }\n  }\n\n  private onSponsor = async ({\n    amount,\n    comment\n  }: {\n    amount: number\n    comment: string\n  }) => {\n    this.props.checkWallet()\n    const { txContract, account } = this.props\n    if (txContract && account) {\n      this.props.sponserChallenge({\n        groupId: this.groupId,\n        who: this.address,\n        amount,\n        comment\n      })\n    }\n  }\n\n  public componentDidUpdate() {\n    this.checkAndFetch()\n  }\n\n  public componentDidMount() {\n    this.checkAndFetch()\n  }\n\n  public render() {\n    const {\n      completeDays,\n      totalDays,\n      targetDays,\n      amount,\n      intl,\n      isCofirmingSponsor,\n      txhash,\n      contract,\n      groupName,\n      groupImage\n    } = this.props\n\n    return (\n      <React.Fragment>\n        <ChallengeContainer>\n          <Helmet>\n            <title>\n              {intl.formatMessage(\n                { id: 'docTitleChallenge' },\n                { address: this.address }\n              )}\n            </title>\n            <link rel='canonical' href='http://mysite.com/example' />\n          </Helmet>\n          <StyledGridList>\n            <ChallengeCard\n              groupId={this.groupId}\n              name={groupName}\n              url={groupImage}\n              invalidAddress={this.state.invalidAddress}\n            />\n            <ChallengeInfo\n              address={this.address}\n              completeDays={completeDays}\n              targetDays={targetDays}\n              totalDays={totalDays}\n              amount={amount}\n              sponsorAmount={this.state.sponsorAmount}\n              invalidAddress={this.state.invalidAddress}\n            />\n            {totalDays ? (\n              <SponsorButton onSponsor={this.onSponsor} intl={intl} />\n            ) : null}\n            {isCofirmingSponsor ? <Transaction txHash={txhash} /> : null}\n            <Sponsers sponsors={this.state.sponsors} />\n            <HistoryTimeline contract={contract} challenger={this.address} />\n          </StyledGridList>\n        </ChallengeContainer>\n        <Notifier contract={contract} />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(injectIntl(Challenge))\n","import React from 'react'\nimport { addLocaleData, IntlProvider } from 'react-intl'\nimport localeEn from 'react-intl/locale-data/en'\nimport localeZh from 'react-intl/locale-data/zh'\n\nimport messageEN_US from './en.json'\nimport messageZH_TW from './zh_TW.json'\nimport messageZH_CN from './zh_CN.json'\n\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parseLangPath } from '@Utils/index'\n\naddLocaleData([...localeEn, ...localeZh])\n\ntype Message = {\n  en_US: string\n  zh_TW: string\n  zh_CN: string\n}\n\ntype MessagesProp = { [k in keyof Message]: any }\n\nconst messgaes = {\n  en_US: messageEN_US,\n  zh_TW: messageZH_TW,\n  zh_CN: messageZH_CN\n} as MessagesProp\n\nexport default function(WrappedComponent: React.ComponentClass) {\n  return class MutilLang extends React.Component<RouteComponentProps> {\n    public state = {\n      lang: parseLangPath(this.props.location.pathname)\n    }\n\n    public componentDidMount() {\n      const { history } = this.props\n      history.listen(location => {\n        const nextLang = parseLangPath(location.pathname)\n        if (nextLang && nextLang !== this.state.lang) {\n          this.setState({\n            lang: nextLang\n          })\n        }\n      })\n    }\n\n    public render() {\n      const { lang } = this.state\n      const locale = lang.indexOf('en') > -1 ? 'en' : 'zh'\n      return (\n        <IntlProvider locale={locale} messages={messgaes[lang]}>\n          <WrappedComponent />\n        </IntlProvider>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport { Route, Switch, Redirect, Link, withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Home from '@Container/Home'\nimport CreateChallengeGroup from '@Container/CreateChallengeGroup'\nimport Challenge from '@Container/Challenge'\n\nimport TranslateHoc from '@Src/translation'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { withTheme } from '@material-ui/core/styles'\nimport { APP_FONT_COLOR, APP_THEME } from '@Src/contants/themeColor'\nimport { supportLang } from '@Src/contants/common'\nimport 'reset-css'\nimport './app.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: APP_THEME,\n      light: APP_THEME,\n      dark: APP_THEME\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n\nconst Body = styled('div')({\n  fontFamily: '-apple-system, BlinkMacSystemFont, sans-serif',\n  background: APP_FONT_COLOR,\n  minHeight: '100vh'\n})\n\nconst MainContainer = styled('div')({\n  margin: '0 auto 40px',\n  paddingTop: 60\n})\n\nconst Landing = () => (\n  <div>\n    <Link to='/create'>CoinChallenges</Link>\n  </div>\n)\n\nconst supportRegex = supportLang.join('|')\n\nclass App extends Component {\n  public componentDidMount() {\n    const jssStyles = document.getElementById('jss-ssr')\n    jssStyles && jssStyles.remove()\n  }\n  public render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Body>\n          <MainContainer>\n            <Home />\n            <Switch>\n              <Route\n                path={`/:lng(${supportRegex})?`}\n                exact\n                component={Landing}\n              />\n              <Route\n                path={`/:lng(${supportRegex})/create`}\n                exact\n                component={CreateChallengeGroup}\n              />\n              <Route\n                path={`/:lng(${supportRegex})/challenge/:groupId/:address`}\n                component={Challenge}\n              />\n              <Route component={() => <Redirect to='/' />} />\n            </Switch>\n          </MainContainer>\n        </Body>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withTheme()(withRouter(TranslateHoc(App)))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Action } from '@Src/typing/globalTypes'\nimport {\n  SET_CAHLLENGE_GROUP,\n  SET_CAHLLENGE,\n  SET_CAHLLENGE_SPONSERS,\n  SET_COFIRM_SPONSOR,\n  SetGroupProp,\n  SetConfirmSponsor,\n  SetSponserProp\n} from '@Epics/challengeEpic/action'\nimport { ChallengeType, Sponsor } from '@Src/typing/globalTypes'\nimport { Record, RecordOf } from 'immutable'\n\nexport type ChallengeState = {\n  sponsers: Array<Sponsor>\n  isCofirmingSponsor: boolean\n  txhash: string\n  groupName: string\n  groupImage: string\n} & ChallengeType\n\nexport type ChallengeStateType = RecordOf<ChallengeState>\nlet initState\nif (typeof window !== 'undefined' && window.__PRELOADED_STATE__) {\n  initState = window.__PRELOADED_STATE__.challenge\n} else {\n  initState = {\n    completeDays: 0,\n    targetDays: 0,\n    totalDays: 0,\n    startDayTimestamp: 0,\n    sponserSize: 0,\n    amount: 0\n  } as ChallengeType\n}\n\nconst stateMaker = Record<ChallengeState>({\n  sponsers: [],\n  isCofirmingSponsor: false,\n  txhash: '',\n  groupName: '',\n  groupImage: '',\n  ...initState\n})\n\nexport const initialState = stateMaker()\n\nconst challengeReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CAHLLENGE:\n      return state.merge({\n        ...action.payload\n      })\n\n    case SET_CAHLLENGE_SPONSERS:\n      const payload = action.payload as SetSponserProp\n      return state.set('sponsers', payload.sponsors)\n\n    case SET_COFIRM_SPONSOR:\n      const { isCofirmingSponsor, txhash } = action.payload as SetConfirmSponsor\n      return state.merge({\n        isCofirmingSponsor,\n        txhash\n      })\n    case SET_CAHLLENGE_GROUP:\n      const { groupName, groupImage } = action.payload as SetGroupProp\n      return state.merge({\n        groupName,\n        groupImage\n      })\n    default:\n      return state\n  }\n}\n\nexport default challengeReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport {\n  SET_CONTRACT,\n  SET_POPUP,\n  CHECK_WALLET,\n  SET_CONFIRM,\n  SetPopProps\n} from '@Epics/commonEpic/action'\nimport { GET_CAHLLENGE, SET_CAHLLENGE } from '@Epics/challengeEpic/action'\nimport {\n  CREATE_CHALLENGE_GROUP,\n  SET_CREATE_RESULT\n} from '@Epics/challengeGroupEpic/action'\nimport Contract from 'web3/eth/contract'\nimport { getMetmaskUrl } from '@Src/utils'\nimport { Record, RecordOf } from 'immutable'\n\nexport type CommonState = {\n  lang: string\n  userAddress: string | null\n  txContract: Contract | null\n  contract: Contract | null\n  accounts: Array<string>\n  loading: boolean\n  showPop: boolean\n  popMessage: string\n  messageKey: string | null\n  isConfirming: boolean\n  txHash?: string\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport type CommonStateType = RecordOf<CommonState>\n\nconst stateMaker = Record<CommonState>({\n  lang: 'en',\n  userAddress: null,\n  accounts: [],\n  txContract: null,\n  contract: null,\n  loading: true,\n  showPop: false,\n  popMessage: '',\n  messageKey: null,\n  isConfirming: false,\n  txHash: '',\n  error: null\n})\n\ninterface SetContractPayload {\n  txContract: Contract | null\n  contract: Contract | null\n  userAddress: string | null\n  accounts: Array<string>\n  loading: boolean\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport const initialState = stateMaker()\n\nconst commonReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CONTRACT:\n      const {\n        txContract,\n        contract,\n        userAddress,\n        accounts = [],\n        error\n      } = action.payload as SetContractPayload\n      return state.merge({\n        txContract,\n        contract,\n        userAddress,\n        accounts,\n        loading: false,\n        error\n      })\n\n    case SET_POPUP:\n      const payload = action.payload as SetPopProps\n      return state.merge({\n        showPop: payload.showPop,\n        popMessage: payload.popMessage,\n        messageKey: payload.messageKey\n      })\n\n    case GET_CAHLLENGE:\n    case CREATE_CHALLENGE_GROUP:\n      return state.set('loading', true)\n    case SET_CAHLLENGE:\n    case SET_CREATE_RESULT:\n      return state.merge({\n        loading: false,\n        isConfirming: false\n      })\n    case CHECK_WALLET:\n      if (state.get('txContract') === null) {\n        const url = getMetmaskUrl()\n        if (state.get('accounts').length === 0) {\n          return state.merge({\n            showPop: true,\n            messageKey: 'accountNotFound'\n          })\n        }\n\n        if (url) {\n          window.open(url)\n        } else {\n          state = state.merge({\n            showPop: true,\n            messageKey: 'browserNotSupport'\n          })\n        }\n      }\n\n      return state\n    case SET_CONFIRM:\n      const { isConfirming, txHash } = action.payload as any\n      return state.merge({\n        isConfirming,\n        txHash\n      })\n    default:\n      return state\n  }\n}\n\nexport default commonReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport { SET_CREATE_RESULT } from '@Epics/challengeGroupEpic/action'\nimport { Record, RecordOf } from 'immutable'\n\nexport type ChallengeGroupState = {\n  response: {\n    status?: number\n    gasUsed?: number\n  }\n  error: boolean\n}\n\nexport type ChallengeGroupStateType = RecordOf<ChallengeGroupState>\n\nconst stateMaker = Record<ChallengeGroupState>({\n  response: {},\n  error: false\n})\n\nexport const initialState = stateMaker()\n\nconst challengeGroupReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CREATE_RESULT:\n      const { response, error } = action.payload as ChallengeGroupState\n      return state.merge({\n        response,\n        error\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default challengeGroupReducer\n","import { combineReducers } from 'redux-immutable'\nimport { Reducer } from 'redux'\nimport commonReducer from './commonReducer'\nimport challengeGroupReducer from './challengeGroupReducer'\nimport challengeReducer from './challengeReducer'\n\nconst rootReducer: Reducer = combineReducers({\n  common: commonReducer,\n  challengeGroup: challengeGroupReducer,\n  challenge: challengeReducer\n})\n\nexport default rootReducer\n","import { Action } from '@Src/typing/globalTypes'\nimport { CREATE_CHALLENGE_GROUP, setCreateResult } from './action'\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport {\n  switchMap,\n  mergeMap,\n  catchError,\n  filter,\n  take,\n  repeat\n} from 'rxjs/operators'\nimport { from, of } from 'rxjs'\n\nimport { setPopup, setConfirm } from '../commonEpic/action'\n\nfunction parseErrorMsg(err: string) {\n  if (err.indexOf('invalid addres') > -1) {\n    return 'invalidAddress'\n  } else if (err.indexOf('connection not open') > -1) {\n    return 'connectNotOpen'\n  } else if (err.indexOf('User denied') > -1) {\n    return 'userDenied'\n  }\n  return 'createGroupError'\n}\n\nexport const newChallengeGroupEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(CREATE_CHALLENGE_GROUP),\n    take(1),\n    filter(() => state$.value.get('common').get('txContract') !== null),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const payload = { ...action.payload } as any\n      const [contract, address] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('userAddress')\n      ]\n\n      const dispatch = payload.dispatch\n      delete payload.dispatch\n\n      payload.minAmount = web3.utils.toWei(payload.minAmount, 'ether')\n      return from(\n        contract.methods\n          .createChallengeGroup(...Object.values(payload), address)\n          .send({ from: address }, (_err: any, hash: string) => {\n            dispatch(\n              setConfirm({\n                isConfirming: true,\n                txHash: hash\n              })\n            )\n          })\n      ).pipe(\n        mergeMap((response: any) => {\n          window.contract = contract\n          const challengeObject = {\n            groupId: payload.id,\n            targetDays: payload.minDays,\n            totalDays: payload.maxDays,\n            startTime: Math.floor(Date.now() / 1000)\n          }\n\n          contract.methods\n            .createChallenge(...Object.values(challengeObject))\n            .send({\n              from: address,\n              value: web3.utils.toWei('0.01', 'ether')\n            })\n            .on('error', function(error: any) {\n              console.log(error)\n            })\n            .then((res: any) => {\n              console.log('create challenge success!')\n            })\n\n          return of(\n            setCreateResult({\n              response: {\n                status: response.status,\n                gasUsed: response.gasUsed\n              },\n              error: false\n            }),\n            setPopup({\n              showPop: true,\n              messageKey: 'createSuccess'\n            })\n          )\n        }),\n        catchError((err: Error) => {\n          return of(\n            setPopup({\n              showPop: true,\n              messageKey: parseErrorMsg(err.message)\n            }),\n            setCreateResult({\n              response: {},\n              error: true\n            })\n          )\n        })\n      )\n    }),\n    repeat()\n  )\n\nexport default [newChallengeGroupEpic]\n","import {\n  GET_CAHLLENGE,\n  SPONSER_CHALLENGE,\n  SponserProp,\n  setChallengeGroup,\n  setChallenge,\n  setConfirmSponsor\n} from './action'\nimport { Action } from '@Src/typing/globalTypes'\n\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport {\n  map,\n  switchMap,\n  catchError,\n  filter,\n  take,\n  repeat,\n  mergeMap\n} from 'rxjs/operators'\nimport { from, of } from 'rxjs'\nimport { setPopup } from '../commonEpic/action'\nimport { parseChallenge } from '@Utils/contractUtils'\nimport web3 from 'web3'\n\nexport const getChallengeGroupEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(GET_CAHLLENGE),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const [contract] = [commonReducer.get('contract')]\n      const { groupId } = action.payload as any\n\n      return from(contract.methods.getChallengeGroup(groupId).call()).pipe(\n        map((response: any) => {\n          return setChallengeGroup({\n            groupName: response._name,\n            groupImage: response._url\n          })\n        }),\n        catchError((err: any) => {\n          return of(setPopup({ showPop: true, popMessage: err.message }))\n        })\n      )\n    })\n  )\n\nexport const getChallengeEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(GET_CAHLLENGE),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const [contract] = [commonReducer.get('contract')]\n      const { groupId, challenger } = action.payload as any\n\n      return from(\n        contract.methods.getChallenge(groupId, challenger).call()\n      ).pipe(\n        map((response: any) => {\n          const challenge = parseChallenge(response)\n          return challenge.totalDays\n            ? setChallenge(challenge)\n            : setPopup({ showPop: true, popMessage: 'challenge not found' })\n        }),\n        catchError((err: any) => {\n          return of(setPopup({ showPop: true, popMessage: err }))\n        })\n      )\n    })\n  )\n\nexport const sponsorChallengeEpic = (\n  action$: ActionsObservable<Action>,\n  state$: StateObservable<any>\n) =>\n  action$.pipe(\n    ofType(SPONSER_CHALLENGE),\n    filter(() => state$.value.get('common').get('txContract') !== null),\n    take(1),\n    switchMap((action: Action) => {\n      const commonReducer = state$.value.get('common')\n      const payload = action.payload as SponserProp\n      const { groupId, who, comment, amount, dispatch } = payload\n      const [contract, address] = [\n        commonReducer.get('txContract'),\n        commonReducer.get('userAddress')\n      ]\n\n      return from(\n        contract.methods.sponsorChallenge(groupId, who, comment).send(\n          {\n            from: address,\n            value: web3.utils.toWei(String(amount), 'ether')\n          },\n          (_err: any, hash: string) => {\n            dispatch &&\n              dispatch(\n                setConfirmSponsor({\n                  isCofirmingSponsor: true,\n                  txhash: hash\n                })\n              )\n          }\n        )\n      ).pipe(\n        mergeMap(() =>\n          of(\n            setPopup({ showPop: true, messageKey: 'donateSuccess' }),\n            setConfirmSponsor({ isCofirmingSponsor: false, txhash: '' })\n          )\n        ),\n        catchError((err: Error) => {\n          return of(\n            setPopup({ showPop: true, popMessage: err.message }),\n            setConfirmSponsor({ isCofirmingSponsor: false, txhash: '' })\n          )\n        })\n      )\n    }),\n    repeat()\n  )\n\nexport default [getChallengeGroupEpic, getChallengeEpic, sponsorChallengeEpic]\n","import { combineEpics } from 'redux-observable'\nimport commonEpics from './commonEpic'\nimport challengeGroupEpics from './challengeGroupEpic'\nimport challengeEpics from './challengeEpic'\n\nexport default combineEpics(\n  ...commonEpics,\n  ...challengeGroupEpics,\n  ...challengeEpics\n)\n","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducer'\n\nimport { createEpicMiddleware } from 'redux-observable'\nimport rootEpic from '../epics'\n\nconst epicMiddleware = createEpicMiddleware()\nlet middlewares: Array<any> = [epicMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ stateTransformer: state => state.toJS() }))\n}\n\nlet store = createStore(rootReducer, applyMiddleware(...middlewares))\nepicMiddleware.run(rootEpic)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from '@Src/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.hydrate(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}