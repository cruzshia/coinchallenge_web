{"version":3,"sources":["../../src/reducer/commonReducer.ts"],"names":["stateMaker","userAddress","accounts","contract","loading","error","initialState","commonReducer","state","action","type","SET_CONTRACT","payload","merge","GET_CAHLLENGE","CREATE_CHALLENGE_GROUP","set","SET_CAHLLENGE","SET_CREATE_RESULT"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAKA;;AAeA,IAAMA,UAAU,GAAG,uBAAoB;AACrCC,EAAAA,WAAW,EAAE,IADwB;AAErCC,EAAAA,QAAQ,EAAE,EAF2B;AAGrCC,EAAAA,QAAQ,EAAE,IAH2B;AAIrCC,EAAAA,OAAO,EAAE,IAJ4B;AAKrCC,EAAAA,KAAK,EAAE;AAL8B,CAApB,CAAnB;AAmBO,IAAMC,YAAY,GAAGN,UAAU,EAA/B;;;AAEP,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAA0C;AAAA,MAAzCC,KAAyC,uEAAjCF,YAAiC;AAAA,MAAnBG,MAAmB;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,oBAAL;AAAA,iBAMMF,MAAM,CAACG,OANb;AAAA,UAEIT,SAFJ,QAEIA,QAFJ;AAAA,UAGIF,YAHJ,QAGIA,WAHJ;AAAA,+BAIIC,QAJJ;AAAA,UAIIA,SAJJ,8BAIe,EAJf;AAAA,UAKIG,MALJ,QAKIA,KALJ;;AAOE,aAAOG,KAAK,CAACK,KAAN,CAAY;AACjBV,QAAAA,QAAQ,EAARA,SADiB;AAEjBF,QAAAA,WAAW,EAAXA,YAFiB;AAGjBC,QAAAA,QAAQ,EAARA,SAHiB;AAIjBE,QAAAA,OAAO,EAAE,KAJQ;AAKjBC,QAAAA,KAAK,EAALA;AALiB,OAAZ,CAAP;;AAOF,SAAKS,sBAAL;AACA,SAAKC,+BAAL;AACE,aAAOP,KAAK,CAACQ,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;;AACF,SAAKC,sBAAL;AACA,SAAKC,0BAAL;AACE,aAAOV,KAAK,CAACQ,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;;AACF;AACE,aAAOR,KAAP;AAtBJ;AAwBD,CAzBD;;eA2BeD,a","sourcesContent":["import { Action } from '@Src/typing/globalTypes'\nimport { SET_CONTRACT } from '@Epics/commonEpic/action'\nimport { GET_CAHLLENGE, SET_CAHLLENGE } from '@Epics/challengeEpic/action'\nimport {\n  CREATE_CHALLENGE_GROUP,\n  SET_CREATE_RESULT\n} from '@Epics/challengeGroupEpic/action'\nimport Web3 from 'web3'\nimport { Record, RecordOf } from 'immutable'\n\nexport type CommonState = {\n  userAddress: string | null\n  contract: Web3 | null\n  accounts: Array<string>\n  loading: boolean\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport type CommonStateType = RecordOf<CommonState>\n\nconst stateMaker = Record<CommonState>({\n  userAddress: null,\n  accounts: [],\n  contract: null,\n  loading: true,\n  error: null\n})\n\ninterface SetContractPayload {\n  contract: Web3 | null\n  userAddress: string | null\n  accounts: Array<string>\n  loading: boolean\n  error: {\n    code: number\n    text: string\n  } | null\n}\n\nexport const initialState = stateMaker()\n\nconst commonReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_CONTRACT:\n      const {\n        contract,\n        userAddress,\n        accounts = [],\n        error\n      } = action.payload as SetContractPayload\n      return state.merge({\n        contract,\n        userAddress,\n        accounts,\n        loading: false,\n        error\n      })\n    case GET_CAHLLENGE:\n    case CREATE_CHALLENGE_GROUP:\n      return state.set('loading', true)\n    case SET_CAHLLENGE:\n    case SET_CREATE_RESULT:\n      return state.set('loading', false)\n    default:\n      return state\n  }\n}\n\nexport default commonReducer\n"],"file":"commonReducer.js"}