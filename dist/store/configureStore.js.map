{"version":3,"sources":["../../src/store/configureStore.tsx"],"names":["epicMiddleware","middlewares","process","env","NODE_ENV","push","stateTransformer","state","toJS","store","rootReducer","applyMiddleware","run","rootEpic"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,4CAAvB;AACA,IAAIC,WAAuB,GAAG,CAACD,cAAD,CAA9B;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiB,+BAAa;AAAEC,IAAAA,gBAAgB,EAAE,0BAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,EAAJ;AAAA;AAAzB,GAAb,CAAjB;AACD;;AAED,IAAMC,KAAK,GAAG,wBACZC,gBADY,EAEZC,qCAAmBV,WAAnB,CAFY,CAAd;AAKAD,cAAc,CAACY,GAAf,CAAmBC,cAAnB;eAEeJ,K","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from '../reducer'\n\nimport { createEpicMiddleware } from 'redux-observable'\nimport rootEpic from '../epics'\n\nconst epicMiddleware = createEpicMiddleware();\nlet middlewares: Array<any> = [epicMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(createLogger({ stateTransformer: state => state.toJS() }))\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...middlewares)\n)\n\nepicMiddleware.run(rootEpic)\n\nexport default store"],"file":"configureStore.js"}